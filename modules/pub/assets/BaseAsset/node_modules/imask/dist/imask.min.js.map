{"version":3,"file":"imask.min.js","sources":["../node_modules/core-js/modules/_defined.js","../node_modules/core-js/modules/_has.js","../node_modules/core-js/modules/_cof.js","../node_modules/core-js/modules/_iobject.js","../node_modules/core-js/modules/_to-iobject.js","../node_modules/core-js/modules/_to-integer.js","../node_modules/core-js/modules/_to-length.js","../node_modules/core-js/modules/_to-absolute-index.js","../node_modules/core-js/modules/_shared.js","../node_modules/core-js/modules/_array-includes.js","../node_modules/core-js/modules/_shared-key.js","../node_modules/core-js/modules/_global.js","../node_modules/core-js/modules/_uid.js","../node_modules/core-js/modules/_object-keys-internal.js","../node_modules/core-js/modules/_enum-bug-keys.js","../node_modules/core-js/modules/_object-keys.js","../node_modules/core-js/modules/_core.js","../node_modules/core-js/modules/_is-object.js","../node_modules/core-js/modules/_an-object.js","../node_modules/core-js/modules/_fails.js","../node_modules/core-js/modules/_descriptors.js","../node_modules/core-js/modules/_dom-create.js","../node_modules/core-js/modules/_ie8-dom-define.js","../node_modules/core-js/modules/_object-dp.js","../node_modules/core-js/modules/_to-primitive.js","../node_modules/core-js/modules/_hide.js","../node_modules/core-js/modules/_property-desc.js","../node_modules/core-js/modules/_redefine.js","../node_modules/core-js/modules/_ctx.js","../node_modules/core-js/modules/_a-function.js","../node_modules/core-js/modules/_export.js","../node_modules/core-js/modules/_object-sap.js","../node_modules/core-js/modules/es6.object.keys.js","../node_modules/core-js/modules/_to-object.js","../node_modules/core-js/fn/object/keys.js","../node_modules/core-js/modules/_string-repeat.js","../node_modules/core-js/modules/es6.string.repeat.js","../node_modules/core-js/fn/string/repeat.js","../node_modules/core-js/modules/_string-pad.js","../node_modules/core-js/modules/_user-agent.js","../node_modules/core-js/modules/es7.string.pad-start.js","../node_modules/core-js/fn/string/pad-start.js","../node_modules/core-js/modules/es7.string.pad-end.js","../node_modules/core-js/fn/string/pad-end.js","../src/core/utils.js","../src/core/action-details.js","../src/core/change-details.js","../src/masked/base.js","../src/masked/factory.js","../src/masked/pattern/definition.js","../src/masked/pattern/group.js","../src/masked/pattern/chunk-tail-details.js","../src/masked/pattern.js","../src/masked/date.js","../src/controls/input.js","../src/masked/number.js","../src/masked/regexp.js","../src/masked/function.js","../src/masked/dynamic.js","../src/imask.js"],"sourcesContent":["// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var core = module.exports = { version: '2.5.3' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n","require('../../modules/es6.string.repeat');\nmodule.exports = require('../../modules/_core').String.repeat;\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\n$export($export.P + $export.F * /Version\\/10\\.\\d+(\\.\\d+)? Safari\\//.test(userAgent), 'String', {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n","require('../../modules/es7.string.pad-start');\nmodule.exports = require('../../modules/_core').String.padStart;\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\n$export($export.P + $export.F * /Version\\/10\\.\\d+(\\.\\d+)? Safari\\//.test(userAgent), 'String', {\n  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});\n","require('../../modules/es7.string.pad-end');\nmodule.exports = require('../../modules/_core').String.padEnd;\n","// @flow\r\n\r\n\r\n/** Checks if value is string */\r\nexport\r\nfunction isString (str: mixed): boolean %checks {\r\n  return typeof str === 'string' || str instanceof String;\r\n}\r\n\r\n/** Conforms string with fallback */\r\nexport\r\nfunction conform (res: ?string | boolean, str: string, fallback: string=''): string {\r\n  return isString(res) ?\r\n    res :\r\n    res ?\r\n      str :\r\n      fallback;\r\n}\r\n\r\n/**\r\n  Direction\r\n  @prop {number} NONE\r\n  @prop {number} LEFT\r\n  @prop {number} RIGHT\r\n*/\r\nexport\r\nconst DIRECTION = {\r\n  NONE: 0,\r\n  LEFT: -1,\r\n  RIGHT: 1\r\n}\r\n/**\r\n  Direction\r\n  @enum {number}\r\n*/\r\nexport\r\ntype Direction = $Values<typeof DIRECTION>;\r\n\r\n/** Returns next char position in direction */\r\nexport\r\nfunction indexInDirection (pos: number, direction: Direction): number {\r\n  if (direction === DIRECTION.LEFT) --pos;\r\n  return pos;\r\n}\r\n\r\n/** Escapes regular expression control chars */\r\nexport\r\nfunction escapeRegExp (str: string): string {\r\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\r\n}\r\n\r\n\r\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\r\nexport\r\nfunction objectIncludes (b: any, a: any): boolean {\r\n  if (a === b) return true;\r\n\r\n  var arrA = Array.isArray(a)\r\n    , arrB = Array.isArray(b)\r\n    , i;\r\n\r\n  if (arrA && arrB) {\r\n    if (a.length != b.length) return false;\r\n    for (i = 0; i < a.length; i++)\r\n      if (!objectIncludes(a[i], b[i])) return false;\r\n    return true;\r\n  }\r\n\r\n  if (arrA != arrB) return false;\r\n\r\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\r\n    var keys = Object.keys(a);\r\n    // if (keys.length !== Object.keys(b).length) return false;\r\n\r\n    var dateA = a instanceof Date\r\n      , dateB = b instanceof Date;\r\n    if (dateA && dateB) return a.getTime() == b.getTime();\r\n    if (dateA != dateB) return false;\r\n\r\n    var regexpA = a instanceof RegExp\r\n      , regexpB = b instanceof RegExp;\r\n    if (regexpA && regexpB) return a.toString() == b.toString();\r\n    if (regexpA != regexpB) return false;\r\n\r\n    for (i = 0; i < keys.length; i++)\r\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\r\n\r\n    for (i = 0; i < keys.length; i++)\r\n      if(!objectIncludes(a[keys[i]], b[keys[i]])) return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/* eslint-disable no-undef */\r\nexport\r\nconst g: any = typeof window !== 'undefined' && window ||\r\n  typeof global !== 'undefined' && global.global === global && global ||\r\n  typeof self !== 'undefined' && self.self === self && self ||\r\n  {};\r\n/* eslint-enable no-undef */\r\n\r\n/** Selection range */\r\nexport\r\ntype Selection = {\r\n  start: number;\r\n  end: number;\r\n};\r\n","// @flow\r\nimport {type Direction, type Selection, DIRECTION} from './utils.js';\r\n\r\n\r\n/** Provides details of changing input */\r\nexport default\r\nclass ActionDetails {\r\n  /** Current input value */\r\n  value: string;\r\n  /** Current cursor position */\r\n  cursorPos: number;\r\n  /** Old input value */\r\n  oldValue: string;\r\n  /** Old selection */\r\n  oldSelection: Selection;\r\n\r\n  constructor (\r\n    value: string,\r\n    cursorPos: number,\r\n    oldValue: string,\r\n    oldSelection: Selection\r\n  ) {\r\n    this.value = value;\r\n    this.cursorPos = cursorPos;\r\n    this.oldValue = oldValue;\r\n    this.oldSelection = oldSelection;\r\n\r\n    // double check if left part was changed (autofilling, other non-standard input triggers)\r\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\r\n      --this.oldSelection.start;\r\n    }\r\n  }\r\n\r\n  /**\r\n    Start changing position\r\n    @readonly\r\n  */\r\n  get startChangePos (): number {\r\n    return Math.min(this.cursorPos, this.oldSelection.start);\r\n  }\r\n\r\n  /**\r\n    Inserted symbols count\r\n    @readonly\r\n  */\r\n  get insertedCount (): number {\r\n    return this.cursorPos - this.startChangePos;\r\n  }\r\n\r\n  /**\r\n    Inserted symbols\r\n    @readonly\r\n  */\r\n  get inserted (): string {\r\n    return this.value.substr(this.startChangePos, this.insertedCount);\r\n  }\r\n\r\n  /**\r\n    Removed symbols count\r\n    @readonly\r\n  */\r\n  get removedCount (): number {\r\n    // Math.max for opposite operation\r\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\r\n      // for Delete\r\n      this.oldValue.length - this.value.length, 0);\r\n  }\r\n\r\n  /**\r\n    Removed symbols\r\n    @readonly\r\n  */\r\n  get removed (): string {\r\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\r\n  }\r\n\r\n  /**\r\n    Unchanged head symbols\r\n    @readonly\r\n  */\r\n  get head (): string {\r\n    return this.value.substring(0, this.startChangePos);\r\n  }\r\n\r\n  /**\r\n    Unchanged tail symbols\r\n    @readonly\r\n  */\r\n  get tail (): string {\r\n    return this.value.substring(this.startChangePos + this.insertedCount);\r\n  }\r\n\r\n  /**\r\n    Remove direction\r\n    @readonly\r\n  */\r\n  get removeDirection (): Direction {\r\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\r\n\r\n    // align right if delete at right or if range removed (event with backspace)\r\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) ?\r\n      DIRECTION.RIGHT :\r\n      DIRECTION.LEFT;\r\n  }\r\n}\r\n","// @flow\r\n\r\n\r\n/**\r\n  Provides details of changing model value\r\n  @param {Object} [details]\r\n  @param {string} [details.inserted] - Inserted symbols\r\n  @param {boolean} [details.overflow] - Is overflowed\r\n  @param {number} [details.removeCount] - Removed symbols count\r\n  @param {number} [details.shift] - Additional offset if any changes occurred before current position\r\n*/\r\nexport default\r\nclass ChangeDetails {\r\n  /** Inserted symbols */\r\n  inserted: string;\r\n  /** Is overflowed */\r\n  overflow: boolean;\r\n  /** Additional offset if any changes occurred before current position */\r\n  shift: number;\r\n  _rawInserted: string;\r\n\r\n  constructor (details?: {\r\n    inserted?: $PropertyType<ChangeDetails, 'inserted'>,\r\n    overflow?: $PropertyType<ChangeDetails, 'overflow'>,\r\n    shift?: $PropertyType<ChangeDetails, 'shift'>,\r\n  }) {\r\n    Object.assign(this, {\r\n      inserted: '',\r\n      overflow: false,\r\n      shift: 0,\r\n    }, details);\r\n  }\r\n\r\n  /**\r\n    Aggregate changes\r\n    @returns {ChangeDetails} `this`\r\n  */\r\n  aggregate (details: ChangeDetails): ChangeDetails {\r\n    if (details.rawInserted) this.rawInserted += details.rawInserted;\r\n    this.inserted += details.inserted;\r\n    this.shift += details.shift;\r\n    this.overflow = this.overflow || details.overflow;\r\n    return this;\r\n  }\r\n\r\n  /** Total offset considering all changes */\r\n  get offset (): number {\r\n    return this.shift + this.inserted.length;\r\n  }\r\n\r\n  /** Raw inserted is used by dynamic mask */\r\n  get rawInserted (): string {\r\n    return this._rawInserted != null ?\r\n      this._rawInserted :\r\n      this.inserted;\r\n  }\r\n\r\n  set rawInserted (rawInserted: string): void {\r\n    this._rawInserted = rawInserted;\r\n  }\r\n}\r\n","// @flow\r\nimport ChangeDetails from '../core/change-details.js';\r\nimport {type Direction, DIRECTION} from '../core/utils.js';\r\nimport {type TailDetails} from '../core/tail-details.js';\r\n\r\n\r\n/** Supported mask type */\r\nexport\r\ntype Mask = string | String | RegExp | Class<Number> | Class<Date> | Array<any> | Function | Masked<*> | Class<Masked<*>>;\r\n\r\n/** Append flags */\r\nexport\r\ntype AppendFlags = {\r\n  input?: boolean,\r\n  tail?: boolean,\r\n  raw?: boolean\r\n};\r\n\r\n/** Extract flags */\r\nexport\r\ntype ExtractFlags = {\r\n  raw?: boolean\r\n};\r\n\r\nexport\r\ntype MaskedOptions<MaskType> = {\r\n  mask: $PropertyType<Masked<MaskType>, 'mask'>,\r\n  prepare?: $PropertyType<Masked<MaskType>, 'prepare'>,\r\n  validate?: $PropertyType<Masked<MaskType>, 'validate'>,\r\n  commit?: $PropertyType<Masked<MaskType>, 'commit'>,\r\n};\r\n\r\n\r\n/** Provides common masking stuff */\r\nexport default\r\nclass Masked<MaskType> {\r\n  static DEFAULTS: any; // $Shape<MaskedOptions>; TODO after fix https://github.com/facebook/flow/issues/4773\r\n\r\n  /** @type {Mask} */\r\n  mask: MaskType;\r\n  /** Transforms value before mask processing */\r\n  prepare: (string, Masked<MaskType>, AppendFlags) => string;\r\n  /** Validates if value is acceptable */\r\n  validate: (string, Masked<MaskType>, AppendFlags) => boolean;\r\n  /** Does additional processing in the end of editing */\r\n  commit: (string, AppendFlags) => void;\r\n  /** */\r\n  isInitialized: boolean;\r\n  _value: string;\r\n  _refreshing: boolean;\r\n\r\n  constructor (opts: {[string]: any}) {\r\n    this._value = '';\r\n    this._update({\r\n      ...Masked.DEFAULTS,\r\n      ...opts\r\n    });\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  /** Sets and applies new options */\r\n  updateOptions (opts: {[string]: any}) {\r\n    this.withValueRefresh(this._update.bind(this, opts));\r\n  }\r\n\r\n  /**\r\n    Sets new options\r\n    @protected\r\n  */\r\n  _update (opts: {[string]: any}) {\r\n    Object.assign(this, opts);\r\n  }\r\n\r\n  /** Clones masked with options and value */\r\n  clone (): Masked<MaskType> {\r\n    const m = new Masked(this);\r\n    m._value = this.value.slice();\r\n    return m;\r\n  }\r\n\r\n  /** */\r\n  assign (source: Masked<MaskType>): Masked<MaskType> {\r\n    // $FlowFixMe\r\n    return Object.assign(this, source);\r\n  }\r\n\r\n  /** Resets value */\r\n  reset () {\r\n    this._value = '';\r\n  }\r\n\r\n  /** */\r\n  get value (): string {\r\n    return this._value;\r\n  }\r\n\r\n  set value (value: string) {\r\n    this.resolve(value);\r\n  }\r\n\r\n  /** Resolve new value */\r\n  resolve (value: string): string {\r\n    this.reset();\r\n    this._append(value, {input: true});\r\n    this._appendTail();\r\n    this.doCommit();\r\n    return this.value;\r\n  }\r\n\r\n  /** */\r\n  get unmaskedValue (): string {\r\n    return this.value;\r\n  }\r\n\r\n  set unmaskedValue (value: string) {\r\n    this.reset();\r\n    this._append(value);\r\n    this._appendTail();\r\n    this.doCommit();\r\n  }\r\n\r\n  /** Value that includes raw user input */\r\n  get rawInputValue (): string {\r\n    return this.extractInput(0, this.value.length, {raw: true});\r\n  }\r\n\r\n  set rawInputValue (value: string) {\r\n    this.reset();\r\n    this._append(value, {raw: true});\r\n    this._appendTail();\r\n    this.doCommit();\r\n  }\r\n\r\n  /** */\r\n  get isComplete (): boolean {\r\n    return true;\r\n  }\r\n\r\n  /** Finds nearest input position in direction */\r\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\r\n    return cursorPos;\r\n  }\r\n\r\n  /** Extracts value in range considering flags */\r\n  extractInput (fromPos: number=0, toPos: number=this.value.length, flags?: ExtractFlags): string {\r\n    return this.value.slice(fromPos, toPos);\r\n  }\r\n\r\n  /** Extracts tail in range */\r\n  _extractTail (fromPos: number=0, toPos: number=this.value.length): TailDetails {\r\n    return {\r\n      value: this.extractInput(fromPos, toPos),\r\n      fromPos,\r\n      toPos,\r\n    };\r\n  }\r\n\r\n  /** Appends tail */\r\n  _appendTail (tail?: TailDetails): ChangeDetails {\r\n    return this._append(tail ? tail.value: '', {tail: true});\r\n  }\r\n\r\n  /** Appends symbols considering flags */\r\n  _append (str: string, flags: AppendFlags={}): ChangeDetails {\r\n    const oldValueLength = this.value.length;\r\n    let consistentValue: Masked<MaskType> = this.clone();\r\n    let overflow = false;\r\n\r\n    str = this.doPrepare(str, flags);\r\n\r\n    for (let ci=0; ci<str.length; ++ci) {\r\n      this._value += str[ci];\r\n      if (this.doValidate(flags) === false) {\r\n        this.assign(consistentValue);\r\n        if (!flags.input) {\r\n          // in `input` mode dont skip invalid chars\r\n          overflow = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      consistentValue = this.clone();\r\n    }\r\n\r\n    return new ChangeDetails({\r\n      inserted: this.value.slice(oldValueLength),\r\n      overflow\r\n    });\r\n  }\r\n\r\n  /** Appends symbols considering tail */\r\n  appendWithTail (str: string, tail: TailDetails): ChangeDetails {\r\n    // TODO refactor\r\n    const aggregateDetails = new ChangeDetails();\r\n    let consistentValue = this.clone();\r\n    let consistentAppended: Masked<MaskType>;\r\n\r\n    for (let ci=0; ci<str.length; ++ci) {\r\n      const ch = str[ci];\r\n\r\n      const appendDetails = this._append(ch, {input: true});\r\n      consistentAppended = this.clone();\r\n      const tailAppended = !appendDetails.overflow && !this._appendTail(tail).overflow;\r\n      if (!tailAppended || this.doValidate({tail: true}) === false) {\r\n        this.assign(consistentValue);\r\n        break;\r\n      }\r\n\r\n      this.assign(consistentAppended);\r\n      consistentValue = this.clone();\r\n      aggregateDetails.aggregate(appendDetails);\r\n    }\r\n\r\n    // TODO needed for cases when\r\n    // 1) REMOVE ONLY AND NO LOOP AT ALL\r\n    // 2) last loop iteration removes tail\r\n    // 3) when breaks on tail insert\r\n\r\n    // aggregate only shift from tail\r\n    aggregateDetails.shift += this._appendTail(tail).shift;\r\n\r\n    return aggregateDetails;\r\n  }\r\n\r\n  /** */\r\n  remove (from: number=0, count: number=this.value.length-from): ChangeDetails {\r\n    this._value = this.value.slice(0, from) + this.value.slice(from + count);\r\n    return new ChangeDetails();\r\n  }\r\n\r\n  /** Calls function and reapplies current value */\r\n  withValueRefresh<T>(fn: () => T): T {\r\n    if (this._refreshing || !this.isInitialized) return fn();\r\n    this._refreshing = true;\r\n\r\n    const unmasked = this.unmaskedValue;\r\n\r\n    const ret = fn();\r\n\r\n    this.unmaskedValue = unmasked;\r\n\r\n    delete this._refreshing;\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n    Prepares string before mask processing\r\n    @protected\r\n  */\r\n  doPrepare (str: string, flags: AppendFlags={}): string {\r\n    return this.prepare(str, this, flags);\r\n  }\r\n\r\n  /**\r\n    Validates if value is acceptable\r\n    @protected\r\n  */\r\n  doValidate (flags: AppendFlags): boolean {\r\n    return this.validate(this.value, this, flags);\r\n  }\r\n\r\n  /**\r\n    Does additional processing in the end of editing\r\n    @protected\r\n  */\r\n  doCommit () {\r\n    this.commit(this.value, this);\r\n  }\r\n\r\n  // TODO\r\n  // insert (str, fromPos, flags)\r\n\r\n  /** */\r\n  splice (start: number, deleteCount: number, inserted: string, removeDirection: Direction): ChangeDetails {\r\n    const tailPos: number = start + deleteCount;\r\n    const tail: TailDetails = this._extractTail(tailPos);\r\n\r\n    let startChangePos: number = this.nearestInputPos(start, removeDirection);\r\n    const changeDetails: ChangeDetails = new ChangeDetails({\r\n      shift: startChangePos - start  // adjust shift if start was aligned\r\n    }).aggregate(this.remove(startChangePos))\r\n      .aggregate(this.appendWithTail(inserted, tail));\r\n\r\n    return changeDetails;\r\n  }\r\n}\r\nMasked.DEFAULTS = {\r\n  prepare: val => val,\r\n  validate: () => true,\r\n  commit: () => {},\r\n};\r\n","// @flow\r\nimport {g, isString} from '../core/utils.js';\r\nimport type Masked from './base.js';\r\nimport {type Mask} from './base.js';\r\n\r\n\r\n/** Get Masked class by mask type */\r\nexport\r\nfunction maskedClass (mask: Mask): Class<Masked<*>> {\r\n  if (mask == null) {\r\n    throw new Error('mask property should be defined');\r\n  }\r\n\r\n  if (mask instanceof RegExp) return g.IMask.MaskedRegExp;\r\n  if (isString(mask)) return g.IMask.MaskedPattern;\r\n  if (mask instanceof Date || mask === Date) return g.IMask.MaskedDate;\r\n  if (mask instanceof Number || typeof mask === 'number' || mask === Number) return g.IMask.MaskedNumber;\r\n  if (Array.isArray(mask) || mask === Array) return g.IMask.MaskedDynamic;\r\n  // $FlowFixMe\r\n  if (mask.prototype instanceof g.IMask.Masked) return mask;\r\n  // $FlowFixMe\r\n  if (mask instanceof Function) return g.IMask.MaskedFunction;\r\n\r\n  console.warn('Mask not found for mask', mask);  // eslint-disable-line no-console\r\n  return g.IMask.Masked;\r\n}\r\n\r\n/** Creates new {@link Masked} depending on mask type */\r\nexport default\r\nfunction createMask (opts: {mask: Mask}): Masked<*> {\r\n  opts = Object.assign({}, opts);  // clone\r\n  const mask = opts.mask;\r\n\r\n  if (mask instanceof g.IMask.Masked) return mask;\r\n\r\n  const MaskedClass = maskedClass(mask);\r\n  return new MaskedClass(opts);\r\n}\r\n","// @flow\r\nimport createMask from '../factory.js';\r\nimport type Masked from '../base.js';\r\nimport {type Mask} from '../base.js';\r\n\r\n\r\ntype Definitions = {[string]: Mask};\r\n/** */\r\ntype DefinitionType = $Values<typeof PatternDefinition.TYPES>;\r\ntype DefinitionTypes = {[string]: DefinitionType};\r\n\r\n/** */\r\nexport default\r\nclass PatternDefinition {\r\n  static TYPES: DefinitionTypes;\r\n  static DEFAULTS: Definitions;\r\n\r\n  /** */\r\n  char: ?string;\r\n  /** */\r\n  stopAlign: ?boolean;\r\n  /** */\r\n  optional: boolean;\r\n  /** */\r\n  isHollow: boolean;\r\n  /** */\r\n  isRawInput: boolean;\r\n  /** */\r\n  type: DefinitionType;\r\n  /** */\r\n  _masked: Masked<*>;\r\n\r\n  constructor(opts: any) {  // TODO flow\r\n    Object.assign(this, opts);\r\n\r\n    if (this.mask) {\r\n      this._masked = createMask(opts);\r\n    }\r\n  }\r\n\r\n  /** */\r\n  reset () {\r\n    this.isHollow = false;\r\n    this.isRawInput = false;\r\n    if (this._masked) this._masked.reset();\r\n  }\r\n\r\n  /** */\r\n  get isInput (): boolean {\r\n    return this.type === PatternDefinition.TYPES.INPUT;\r\n  }\r\n\r\n  /** */\r\n  get isHiddenHollow (): boolean {\r\n    return this.isHollow && this.optional;\r\n  }\r\n\r\n  /** */\r\n  resolve (ch: string): boolean | string {\r\n    if (!this._masked) return false;\r\n    return this._masked.resolve(ch);\r\n  }\r\n}\r\nPatternDefinition.DEFAULTS = {\r\n  '0': /\\d/,\r\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\r\n  '*': /./\r\n};\r\n/**\r\n  @prop {string} INPUT\r\n  @prop {string} FIXED\r\n*/\r\nPatternDefinition.TYPES = {\r\n  INPUT: 'input',\r\n  FIXED: 'fixed'\r\n};\r\n","// @flow\r\nimport type MaskedPattern from '../pattern.js';\r\nimport {type AppendFlags} from '../base.js';\r\n\r\n\r\n/** */\r\nexport\r\ninterface PatternGroupTemplate {\r\n  validate: $PropertyType<PatternGroup, 'validate'>;\r\n  mask: $PropertyType<PatternGroup, 'mask'>;\r\n}\r\n\r\n/** */\r\ntype PatternGroupOptions = PatternGroupTemplate & {\r\n  name: $PropertyType<PatternGroup, 'name'>,\r\n  offset: $PropertyType<PatternGroup, 'offset'>,\r\n};\r\n\r\n/**\r\n  Pattern group symbols from parent\r\n  @param {MaskedPattern} masked - Internal {@link masked} model\r\n  @param {Object} opts\r\n  @param {string} opts.name - Group name\r\n  @param {number} opts.offset - Group offset in masked definitions array\r\n  @param {string} opts.mask - Group mask\r\n  @param {Function} [opts.validate] - Custom group validator\r\n*/\r\nexport default\r\nclass PatternGroup {\r\n  /** */\r\n  static Range: typeof RangeGroup;\r\n  /** */\r\n  static Enum: typeof EnumGroup;\r\n\r\n  /** Internal {@link masked} model */\r\n  masked: MaskedPattern;\r\n  /** Group name */\r\n  name: string;\r\n  /** Group offset in masked definitions array */\r\n  offset: number;\r\n  /** Group mask */\r\n  mask: string;\r\n  /** Custom group validator */\r\n  validate: (string, PatternGroup, AppendFlags) => boolean;\r\n\r\n  constructor(masked: MaskedPattern, {name, offset, mask, validate}: PatternGroupOptions) {\r\n    this.masked = masked;\r\n    this.name = name;\r\n    this.offset = offset;\r\n    this.mask = mask;\r\n    this.validate = validate || (() => true);\r\n  }\r\n\r\n  /** Slice of internal {@link masked} value */\r\n  get value (): string {\r\n    return this.masked.value.slice(\r\n      this.masked.mapDefIndexToPos(this.offset),\r\n      this.masked.mapDefIndexToPos(this.offset + this.mask.length));\r\n  }\r\n\r\n  /** Unmasked slice of internal {@link masked} value */\r\n  get unmaskedValue (): string {\r\n    return this.masked.extractInput(\r\n      this.masked.mapDefIndexToPos(this.offset),\r\n      this.masked.mapDefIndexToPos(this.offset + this.mask.length));\r\n  }\r\n\r\n  /** Validates if current value is acceptable */\r\n  doValidate (flags: AppendFlags) {\r\n    return this.validate(this.value, this, flags);\r\n  }\r\n}\r\n\r\n/**\r\n  Pattern group that validates number ranges\r\n  @param {number[]} range - [from, to]\r\n  @param {?number} maxlen - Maximum number length, will be padded with leading zeros\r\n*/\r\nexport\r\nclass RangeGroup implements PatternGroupTemplate {\r\n  /** @type {string} */\r\n  mask: $PropertyType<PatternGroup, 'mask'>;\r\n  /** @type {Function} */\r\n  validate: $PropertyType<PatternGroup, 'validate'>;\r\n  _maxLength: number;\r\n  _from: number;\r\n  _to: number;\r\n\r\n  constructor ([from, to]: [number, number], maxlen: number=String(to).length) {\r\n    this._from = from;\r\n    this._to = to;\r\n    this._maxLength = maxlen;\r\n    this.validate = this.validate.bind(this);\r\n\r\n    this._update();\r\n  }\r\n\r\n  get to (): number {\r\n    return this._to;\r\n  }\r\n\r\n  set to (to: number) {\r\n    this._to = to;\r\n    this._update();\r\n  }\r\n\r\n  get from (): number {\r\n    return this._from;\r\n  }\r\n\r\n  set from (from: number) {\r\n    this._from = from;\r\n    this._update();\r\n  }\r\n\r\n  get maxLength (): number {\r\n    return this._maxLength;\r\n  }\r\n\r\n  set maxLength (maxLength: number) {\r\n    this._maxLength = maxLength;\r\n    this._update();\r\n  }\r\n\r\n  get _matchFrom (): number {\r\n    return this.maxLength - String(this.from).length;\r\n  }\r\n\r\n  _update() {\r\n    this._maxLength = Math.max(this._maxLength, String(this.to).length);\r\n    this.mask = '0'.repeat(this._maxLength);\r\n  }\r\n\r\n  validate (str: string): boolean {\r\n    let minstr = '';\r\n    let maxstr = '';\r\n\r\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\r\n    if (num) {\r\n      minstr = ('0'.repeat(placeholder.length) + num);\r\n      maxstr = ('9'.repeat(placeholder.length) + num);\r\n    }\r\n\r\n    const firstNonZero = str.search(/[^0]/);\r\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\r\n\r\n    minstr = minstr.padEnd(this._maxLength, '0');\r\n    maxstr = maxstr.padEnd(this._maxLength, '9');\r\n\r\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to;\r\n  }\r\n}\r\n\r\n/** Pattern group that validates enum values */\r\nexport\r\nfunction EnumGroup (enums: Array<string>): PatternGroupTemplate {\r\n  return {\r\n    mask: '*'.repeat(enums[0].length),\r\n    validate: (value: string, group: PatternGroup, flags: AppendFlags) => enums.some(e => e.indexOf(group.unmaskedValue) >= 0)\r\n  };\r\n}\r\n\r\nPatternGroup.Range = RangeGroup;\r\nPatternGroup.Enum = EnumGroup;\r\n","// @flow\r\nimport {type TailDetails} from '../../core/tail-details.js';\r\n\r\n\r\nexport\r\ntype TailInputChunk = {\r\n  stop: ?number,\r\n  value: string\r\n};\r\n\r\nexport\r\nclass ChunksTailDetails implements TailDetails {\r\n  chunks: Array<TailInputChunk>;\r\n\r\n  constructor (chunks: Array<TailInputChunk>) {\r\n    this.chunks = chunks;\r\n  }\r\n\r\n  get value (): string {\r\n    return this.chunks.map(c => c.value).join('');\r\n  }\r\n\r\n  get fromPos (): ?number {\r\n    const firstChunk = this.chunks[0];\r\n    return firstChunk && firstChunk.stop;\r\n  }\r\n\r\n  get toPos (): ?number {\r\n    const lastChunk = this.chunks[this.chunks.length - 1];\r\n    return lastChunk && lastChunk.stop;\r\n  }\r\n}\r\n","// @flow\r\nimport {conform, DIRECTION, indexInDirection, type Direction} from '../core/utils.js';\r\nimport ChangeDetails from '../core/change-details.js';\r\nimport Masked, {type AppendFlags, type ExtractFlags, type MaskedOptions} from './base.js';\r\nimport PatternDefinition from './pattern/definition.js';\r\nimport PatternGroup, {type PatternGroupTemplate} from './pattern/group.js';\r\nimport {ChunksTailDetails, type TailInputChunk} from './pattern/chunk-tail-details.js';\r\nimport {type TailDetails} from '../core/tail-details.js';\r\n\r\n\r\ntype MaskedPatternOptions = {\r\n  ...MaskedOptions<string>,\r\n  definitions: $PropertyType<MaskedPattern, 'definitions'>,\r\n  groups: $PropertyType<MaskedPattern, 'groups'>,\r\n  placeholderChar: $PropertyType<MaskedPattern, 'placeholderChar'>,\r\n  lazy: $PropertyType<MaskedPattern, 'lazy'>,\r\n};\r\ntype InputChunk = [?number, string];\r\n\r\n\r\n/**\r\n  Pattern mask\r\n  @param {Object} opts\r\n  @param {Object} opts.groups\r\n  @param {Object} opts.definitions\r\n  @param {string} opts.placeholderChar\r\n  @param {boolean} opts.lazy\r\n*/\r\nexport default\r\nclass MaskedPattern extends Masked<string> {\r\n  static DEFAULTS: any;\r\n  static STOP_CHAR: string;\r\n  static ESCAPE_CHAR: string;\r\n  static Definition: Class<PatternDefinition>;\r\n  static Group: Class<PatternGroup>;\r\n\r\n  /** */\r\n  groups: {[string]: PatternGroupTemplate};\r\n  /** */\r\n  definitions: {[string]: any};  // TODO mask type\r\n  /** Single char for empty input */\r\n  placeholderChar: string;\r\n  /** Show placeholder only when needed */\r\n  lazy: boolean;\r\n  _charDefs: Array<PatternDefinition>;\r\n  _groupDefs: Array<PatternGroup>;\r\n\r\n  constructor (opts: any={}) {  // TODO type $Shape<MaskedPatternOptions>={} does not work\r\n    opts.definitions = Object.assign({}, PatternDefinition.DEFAULTS, opts.definitions);\r\n    super({\r\n      ...MaskedPattern.DEFAULTS,\r\n      ...opts\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: $Shape<MaskedPatternOptions>={}) {\r\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\r\n    super._update(opts);\r\n    this._rebuildMask();\r\n  }\r\n\r\n  /** */\r\n  _rebuildMask () {\r\n    const defs = this.definitions;\r\n    this._charDefs = [];\r\n    this._groupDefs = [];\r\n\r\n    let pattern = this.mask;\r\n    if (!pattern || !defs) return;\r\n\r\n    let unmaskingBlock = false;\r\n    let optionalBlock = false;\r\n    let stopAlign = false;\r\n\r\n    for (let i=0; i<pattern.length; ++i) {\r\n      if (this.groups) {\r\n        const p = pattern.slice(i);\r\n        const gNames = Object.keys(this.groups).filter(gName => p.indexOf(gName) === 0);\r\n        // order by key length\r\n        gNames.sort((a, b) => b.length - a.length);\r\n        // use group name with max length\r\n        const gName = gNames[0];\r\n        if (gName) {\r\n          const group = this.groups[gName];\r\n          this._groupDefs.push(new PatternGroup(this, {\r\n            name: gName,\r\n            offset: this._charDefs.length,\r\n            mask: group.mask,\r\n            validate: group.validate,\r\n          }));\r\n          pattern = pattern.replace(gName, group.mask);\r\n        }\r\n      }\r\n\r\n      let char = pattern[i];\r\n      let type = char in defs ?\r\n        PatternDefinition.TYPES.INPUT :\r\n        PatternDefinition.TYPES.FIXED;\r\n      const unmasking = type === PatternDefinition.TYPES.INPUT || unmaskingBlock;\r\n      const optional = type === PatternDefinition.TYPES.INPUT && optionalBlock;\r\n\r\n      if (char === MaskedPattern.STOP_CHAR) {\r\n        stopAlign = true;\r\n        continue;\r\n      }\r\n\r\n      if (char === '{' || char === '}') {\r\n        unmaskingBlock = !unmaskingBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === '[' || char === ']') {\r\n        optionalBlock = !optionalBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === MaskedPattern.ESCAPE_CHAR) {\r\n        ++i;\r\n        char = pattern[i];\r\n        if (!char) break;\r\n        type = PatternDefinition.TYPES.FIXED;\r\n      }\r\n\r\n      this._charDefs.push(new PatternDefinition({\r\n        char,\r\n        type,\r\n        optional,\r\n        stopAlign,\r\n        unmasking,\r\n        mask: type === PatternDefinition.TYPES.INPUT ?\r\n          defs[char] :\r\n          (value => value === char)\r\n      }));\r\n\r\n      stopAlign = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (...args: *) {\r\n    return this._groupDefs.every(g => g.doValidate(...args)) && super.doValidate(...args);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  clone () {\r\n    const m = new MaskedPattern(this);\r\n    m._value = this.value;\r\n    // $FlowFixMe\r\n    m._charDefs.forEach((d, i) => Object.assign(d, this._charDefs[i]));\r\n    // $FlowFixMe\r\n    m._groupDefs.forEach((d, i) => Object.assign(d, this._groupDefs[i]));\r\n    return m;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  reset () {\r\n    super.reset();\r\n    this._charDefs.forEach(d => {delete d.isHollow;});\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get isComplete (): boolean {\r\n    return !this._charDefs.some((d, i) =>\r\n      d.isInput && !d.optional && (d.isHollow || !this.extractInput(i, i+1)));\r\n  }\r\n\r\n  /** */\r\n  hiddenHollowsBefore (defIndex: number): number {\r\n    return this._charDefs\r\n      .slice(0, defIndex)\r\n      .filter(d => d.isHiddenHollow)\r\n      .length;\r\n  }\r\n\r\n  /** Map definition index to position on view */\r\n  mapDefIndexToPos (defIndex: number): number {\r\n    return defIndex - this.hiddenHollowsBefore(defIndex);\r\n  }\r\n\r\n  /** Map position on view to definition index */\r\n  mapPosToDefIndex (pos: number): number {\r\n    let defIndex = pos;\r\n    for (let di=0; di<this._charDefs.length; ++di) {\r\n      const def = this._charDefs[di];\r\n      if (di >= defIndex) break;\r\n      if (def.isHiddenHollow) ++defIndex;\r\n    }\r\n    return defIndex;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get unmaskedValue (): string {\r\n    const str = this.value;\r\n    let unmasked = '';\r\n\r\n    for (let ci=0, di=0; ci<str.length && di<this._charDefs.length; ++di) {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      if (def.isHiddenHollow) continue;\r\n      if (def.unmasking && !def.isHollow) unmasked += ch;\r\n      ++ci;\r\n    }\r\n\r\n    return unmasked;\r\n  }\r\n\r\n  set unmaskedValue (unmaskedValue: string) {\r\n    super.unmaskedValue = unmaskedValue;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _appendTail (tail?: ChunksTailDetails | TailDetails): ChangeDetails {\r\n    const details = new ChangeDetails();\r\n    if (tail) {\r\n      details.aggregate(tail instanceof ChunksTailDetails ?\r\n        this._appendChunks(tail.chunks, {tail: true}) :\r\n        super._appendTail(tail));\r\n    }\r\n    return details.aggregate(this._appendPlaceholder());\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _append (str: string, flags: AppendFlags={}): ChangeDetails {\r\n    const oldValueLength = this.value.length;\r\n    let rawInserted = '';\r\n    let overflow = false;\r\n\r\n    str = this.doPrepare(str, flags);\r\n\r\n    for (let ci=0, di=this.mapPosToDefIndex(this.value.length); ci < str.length;) {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      // check overflow\r\n      if (def == null) {\r\n        overflow = true;\r\n        break;\r\n      }\r\n\r\n      // reset\r\n      def.isHollow = false;\r\n\r\n      let resolved, skipped;\r\n      let chres = conform(def.resolve(ch), ch);\r\n\r\n      if (def.type === PatternDefinition.TYPES.INPUT) {\r\n        if (chres) {\r\n          this._value += chres;\r\n          if (!this.doValidate()) {\r\n            chres = '';\r\n            this._value = this.value.slice(0, -1);\r\n          }\r\n        }\r\n\r\n        resolved = !!chres;\r\n        skipped = !chres && !def.optional;\r\n\r\n        if (!chres) {\r\n          if (!def.optional && !flags.input && !this.lazy) {\r\n            this._value += this.placeholderChar;\r\n            skipped = false;\r\n          }\r\n          if (!skipped) def.isHollow = true;\r\n        } else {\r\n          rawInserted += chres;\r\n        }\r\n      } else {\r\n        this._value += def.char;\r\n        resolved = chres && (def.unmasking || flags.input || flags.raw) && !flags.tail;\r\n        def.isRawInput = resolved && (flags.raw || flags.input);\r\n        if (def.isRawInput) rawInserted += def.char;\r\n      }\r\n\r\n      if (!skipped) ++di;\r\n      if (resolved || skipped) ++ci;\r\n    }\r\n\r\n    return new ChangeDetails({\r\n      inserted: this.value.slice(oldValueLength),\r\n      rawInserted,\r\n      overflow\r\n    });\r\n  }\r\n\r\n  /** Appends chunks splitted by stop chars */\r\n  _appendChunks (chunks: Array<TailInputChunk>, ...args: *) {\r\n    const details = new ChangeDetails();\r\n    for (let ci=0; ci < chunks.length; ++ci) {\r\n      const {stop, value} = chunks[ci];\r\n      const fromDef = stop != null && this._charDefs[stop];\r\n      // lets double check if stopAlign is here\r\n      if (fromDef && fromDef.stopAlign) details.aggregate(this._appendPlaceholder(stop));\r\n      if (details.aggregate(this._append(value, ...args)).overflow) break;\r\n    }\r\n    return details;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _extractTail (fromPos: number=0, toPos: number=this.value.length): ChunksTailDetails {\r\n    return new ChunksTailDetails(this._extractInputChunks(fromPos, toPos));\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractInput (fromPos: number=0, toPos: number=this.value.length, flags: ExtractFlags={}): string {\r\n    if (fromPos === toPos) return '';\r\n\r\n    const str = this.value;\r\n    let input = '';\r\n\r\n    const toDefIndex = this.mapPosToDefIndex(toPos);\r\n    for (\r\n      let ci=fromPos, di=this.mapPosToDefIndex(fromPos);\r\n      ci<toPos && ci<str.length && di < toDefIndex;\r\n      ++di\r\n    ) {\r\n      const ch = str[ci];\r\n      const def = this._charDefs[di];\r\n\r\n      if (!def) break;\r\n      if (def.isHiddenHollow) continue;\r\n\r\n      if (def.isInput && !def.isHollow ||\r\n        flags.raw && !def.isInput && def.isRawInput) input += ch;\r\n      ++ci;\r\n    }\r\n    return input;\r\n  }\r\n\r\n  /** Extracts chunks from input splitted by stop chars */\r\n  _extractInputChunks (fromPos: number=0, toPos: number=this.value.length): Array<TailInputChunk> {\r\n    if (fromPos === toPos) return [];\r\n\r\n    const fromDefIndex = this.mapPosToDefIndex(fromPos);\r\n    const toDefIndex = this.mapPosToDefIndex(toPos);\r\n    const stopDefIndices = this._charDefs\r\n      .map((d, i) => [d, i])\r\n      .slice(fromDefIndex, toDefIndex)\r\n      .filter(([d]) => d.stopAlign)\r\n      .map(([, i]) => i);\r\n\r\n    const stops = [\r\n      fromDefIndex,\r\n      ...stopDefIndices,\r\n      toDefIndex\r\n    ];\r\n\r\n    return stops.map((s, i) => ({\r\n      stop: stopDefIndices.indexOf(s) >= 0 ?\r\n        s :\r\n        null,\r\n\r\n      value: this.extractInput(\r\n        this.mapDefIndexToPos(s),\r\n        this.mapDefIndexToPos(stops[++i]))\r\n    })).filter(({stop, value}) => stop != null || value);\r\n  }\r\n\r\n  /** Appends placeholder depending on laziness */\r\n  _appendPlaceholder (toDefIndex: ?number): ChangeDetails {\r\n    const oldValueLength = this.value.length;\r\n    const maxDefIndex = toDefIndex || this._charDefs.length;\r\n    for (let di=this.mapPosToDefIndex(this.value.length); di < maxDefIndex; ++di) {\r\n      const def = this._charDefs[di];\r\n      if (def.isInput) def.isHollow = true;\r\n\r\n      if (!this.lazy || toDefIndex) {\r\n        this._value += !def.isInput && def.char != null ?\r\n          def.char :\r\n          !def.optional ?\r\n            this.placeholderChar :\r\n            '';\r\n      }\r\n    }\r\n    return new ChangeDetails({\r\n      inserted: this.value.slice(oldValueLength)\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  remove (from: number=0, count: number=this.value.length-from): ChangeDetails {\r\n    const fromDefIndex = this.mapPosToDefIndex(from);\r\n    const toDefIndex = this.mapPosToDefIndex(from + count);\r\n    this._charDefs\r\n      .slice(fromDefIndex, toDefIndex)\r\n      .forEach(d => d.reset());\r\n\r\n    return super.remove(from, count);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE) {\r\n    let step = direction || DIRECTION.RIGHT;\r\n\r\n    const initialDefIndex = this.mapPosToDefIndex(cursorPos);\r\n    const initialDef = this._charDefs[initialDefIndex];\r\n    let di = initialDefIndex;\r\n\r\n    let firstInputIndex,\r\n        firstFilledInputIndex,\r\n        firstVisibleHollowIndex,\r\n        nextdi;\r\n\r\n    // check if chars at right is acceptable for LEFT and NONE directions\r\n    if (direction !== DIRECTION.RIGHT &&\r\n      (initialDef && initialDef.isInput ||\r\n        // in none direction latest position is acceptable also\r\n        direction === DIRECTION.NONE && cursorPos === this.value.length)) {\r\n      firstInputIndex = initialDefIndex;\r\n      if (initialDef && !initialDef.isHollow) firstFilledInputIndex = initialDefIndex;\r\n    }\r\n\r\n    if ((firstFilledInputIndex == null && direction == DIRECTION.LEFT) || firstInputIndex == null) {\r\n      // search forward\r\n      for (\r\n        nextdi = indexInDirection(di, step);\r\n        0 <= nextdi && nextdi < this._charDefs.length;\r\n        di += step, nextdi += step\r\n      ) {\r\n        const nextDef = this._charDefs[nextdi];\r\n        if (firstInputIndex == null && nextDef.isInput) {\r\n          firstInputIndex = di;\r\n          if (direction === DIRECTION.NONE) break;\r\n        }\r\n        if (firstVisibleHollowIndex == null && nextDef.isHollow && !nextDef.isHiddenHollow) firstVisibleHollowIndex = di;\r\n        if (nextDef.isInput && !nextDef.isHollow) {\r\n          firstFilledInputIndex = di;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // for lazy if has aligned left inside fixed and has came to the start - use start position\r\n    if (direction === DIRECTION.LEFT && di === 0 && this.lazy && !this.extractInput() &&\r\n      (!initialDef || !initialDef.isInput)) firstInputIndex = 0;\r\n\r\n    if (direction === DIRECTION.LEFT || firstInputIndex == null) {\r\n      // search backward\r\n      step = -step;\r\n      let overflow = false;\r\n\r\n      // find hollows only before initial pos\r\n      for (\r\n        nextdi = indexInDirection(di, step);\r\n        0 <= nextdi && nextdi < this._charDefs.length;\r\n        di += step, nextdi += step\r\n      ) {\r\n        const nextDef = this._charDefs[nextdi];\r\n        if (nextDef.isInput) {\r\n          firstInputIndex = di;\r\n          if (nextDef.isHollow && !nextDef.isHiddenHollow) break;\r\n        }\r\n\r\n        // if hollow not found before start position - set `overflow`\r\n        // and try to find just any input\r\n        if (di === initialDefIndex) overflow = true;\r\n\r\n        // first input found\r\n        if (overflow && firstInputIndex != null) break;\r\n      }\r\n\r\n      // process overflow\r\n      overflow = overflow || nextdi >= this._charDefs.length;\r\n      if (overflow && firstInputIndex != null) di = firstInputIndex;\r\n    } else if (firstFilledInputIndex == null) {\r\n      // adjust index if delete at right and filled input not found at right\r\n      di = firstVisibleHollowIndex != null ?\r\n        firstVisibleHollowIndex :\r\n        firstInputIndex;\r\n    }\r\n\r\n    return this.mapDefIndexToPos(di);\r\n  }\r\n\r\n  /** Get group by name */\r\n  group (name: string): ?PatternGroup {\r\n    return this.groupsByName(name)[0];\r\n  }\r\n\r\n  /** Get all groups by name */\r\n  groupsByName (name: string): Array<PatternGroup> {\r\n    return this._groupDefs.filter(g => g.name === name);\r\n  }\r\n}\r\nMaskedPattern.DEFAULTS = {\r\n  lazy: true,\r\n  placeholderChar: '_'\r\n};\r\nMaskedPattern.STOP_CHAR = '`';\r\nMaskedPattern.ESCAPE_CHAR = '\\\\';\r\nMaskedPattern.Definition = PatternDefinition;\r\nMaskedPattern.Group = PatternGroup;\r\n","// @flow\r\nimport MaskedPattern from './pattern.js';\r\nimport PatternGroup from './pattern/group.js';\r\n\r\n\r\n/** Date mask */\r\nexport default\r\nclass MaskedDate extends MaskedPattern {\r\n  static GET_DEFAULT_GROUPS: () => {[string]: PatternGroup};\r\n  static DEFAULTS: any;\r\n\r\n  /** Parse string to Date */\r\n  parse: (string) => Date;\r\n  /** Format Date to string */\r\n  format: (Date) => string;\r\n  /** Pattern mask for date according to {@link MaskedDate#format} */\r\n  pattern: string;\r\n  /** Start date */\r\n  min: ?Date;\r\n  /** End date */\r\n  max: ?Date;\r\n\r\n  /**\r\n    @param {Object} opts\r\n  */\r\n  constructor (opts: any) {\r\n    super({\r\n      ...MaskedDate.DEFAULTS,\r\n      ...opts\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: any) {\r\n    if (opts.mask === Date) delete opts.mask;\r\n    if (opts.pattern) {\r\n      opts.mask = opts.pattern;\r\n      delete opts.pattern;\r\n    }\r\n\r\n    const groups = opts.groups;\r\n    opts.groups = Object.assign({}, MaskedDate.GET_DEFAULT_GROUPS());\r\n    // adjust year group\r\n    if (opts.min) opts.groups.Y.from = opts.min.getFullYear();\r\n    if (opts.max) opts.groups.Y.to = opts.max.getFullYear();\r\n    Object.assign(opts.groups, groups);\r\n\r\n    super._update(opts);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (...args: *) {\r\n    const valid = super.doValidate(...args);\r\n    const date = this.date;\r\n\r\n    return valid &&\r\n      (!this.isComplete ||\r\n        this.isDateExist(this.value) && date &&\r\n        (this.min == null || this.min <= date) &&\r\n        (this.max == null || date <= this.max));\r\n  }\r\n\r\n  /** Checks if date is exists */\r\n  isDateExist (str: string): boolean {\r\n    return this.format(this.parse(str)) === str;\r\n  }\r\n\r\n  /** Parsed Date */\r\n  get date (): ?Date {\r\n    return this.isComplete ?\r\n      this.parse(this.value) :\r\n      null;\r\n  }\r\n\r\n  set date (date: Date) {\r\n    this.value = this.format(date);\r\n  }\r\n}\r\nMaskedDate.DEFAULTS = {\r\n  pattern: 'd{.}`m{.}`Y',\r\n  format: date => {\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const year = date.getFullYear();\r\n\r\n    return [day, month, year].join('.');\r\n  },\r\n  parse: str => {\r\n    const [day, month, year] = str.split('.');\r\n    return new Date(year, month - 1, day);\r\n  },\r\n};\r\nMaskedDate.GET_DEFAULT_GROUPS = () => {\r\n  return {\r\n    d: new PatternGroup.Range([1, 31]),\r\n    m: new PatternGroup.Range([1, 12]),\r\n    Y: new PatternGroup.Range([1900, 9999]),\r\n  };\r\n}","// @flow\r\nimport {objectIncludes, DIRECTION, type Selection} from '../core/utils.js';\r\nimport ActionDetails from '../core/action-details.js';\r\nimport MaskedDate from '../masked/date.js';\r\nimport createMask, {maskedClass} from '../masked/factory.js';\r\nimport type Masked from '../masked/base.js';\r\nimport {type Mask} from '../masked/base.js';\r\n\r\n\r\n/**\r\n  Generic element API to use with mask\r\n  @interface\r\n*/\r\ninterface UIElement {\r\n  value: string;\r\n  selectionStart: number;\r\n  selectionEnd: number;\r\n  setSelectionRange (number, number): void;\r\n  addEventListener(string, Function): void;\r\n  removeEventListener(string, Function): void;\r\n}\r\n\r\n\r\n/** Listens to element events and controls changes between element and {@link Masked} */\r\nexport default\r\nclass InputMask {\r\n  /**\r\n    View element\r\n    @readonly\r\n  */\r\n  el: UIElement;\r\n\r\n  /**\r\n    Internal {@link Masked} model\r\n    @readonly\r\n  */\r\n  masked: Masked<*>;\r\n  alignCursor: () => void;\r\n  alignCursorFriendly: () => void;\r\n\r\n  _listeners: {[string]: Array<Function>};\r\n  _value: string;\r\n  _changingCursorPos: number;\r\n  _unmaskedValue: string;\r\n  _saveSelection: (?Event) => void;\r\n  _selection: Selection;\r\n  _onInput: (Event) => void;\r\n  _onChange: () => void;\r\n  _onDrop: (Event) => void;\r\n  _cursorChanging: TimeoutID;\r\n\r\n  /**\r\n    @param {UIElement} el\r\n    @param {Object} opts\r\n  */\r\n  constructor (el: UIElement, opts: {[string]: any}) {\r\n    this.el = el;\r\n    this.masked = createMask(opts);\r\n\r\n    this._listeners = {};\r\n    this._value = '';\r\n    this._unmaskedValue = '';\r\n\r\n    this._saveSelection = this._saveSelection.bind(this);\r\n    this._onInput = this._onInput.bind(this);\r\n    this._onChange = this._onChange.bind(this);\r\n    this._onDrop = this._onDrop.bind(this);\r\n    this.alignCursor = this.alignCursor.bind(this);\r\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\r\n\r\n    this._bindEvents();\r\n\r\n    // refresh\r\n    this.updateValue();\r\n    this._onChange();\r\n  }\r\n\r\n  /** Read or update mask */\r\n  get mask (): Mask {\r\n    return this.masked.mask;\r\n  }\r\n  set mask (mask: Mask) {\r\n    if (mask == null || mask === this.masked.mask) return;\r\n\r\n    if (this.masked.constructor === maskedClass(mask)) {\r\n      this.masked.mask = mask;\r\n      return;\r\n    }\r\n\r\n    const masked = createMask({mask});\r\n    masked.unmaskedValue = this.masked.unmaskedValue;\r\n    this.masked = masked;\r\n  }\r\n\r\n  /** Raw value */\r\n  get value (): string {\r\n    return this._value;\r\n  }\r\n\r\n  set value (str: string) {\r\n    this.masked.value = str;\r\n    this.updateControl();\r\n    this.alignCursor();\r\n  }\r\n\r\n  /** Unmasked value */\r\n  get unmaskedValue (): string {\r\n    return this._unmaskedValue;\r\n  }\r\n\r\n  set unmaskedValue (str: string) {\r\n    this.masked.unmaskedValue = str;\r\n    this.updateControl();\r\n    this.alignCursor();\r\n  }\r\n\r\n  /**\r\n    Starts listening to element events\r\n    @protected\r\n  */\r\n  _bindEvents () {\r\n    this.el.addEventListener('keydown', this._saveSelection);\r\n    this.el.addEventListener('input', this._onInput);\r\n    this.el.addEventListener('drop', this._onDrop);\r\n    this.el.addEventListener('click', this.alignCursorFriendly);\r\n    this.el.addEventListener('change', this._onChange);\r\n  }\r\n\r\n  /**\r\n    Stops listening to element events\r\n    @protected\r\n   */\r\n  _unbindEvents () {\r\n    this.el.removeEventListener('keydown', this._saveSelection);\r\n    this.el.removeEventListener('input', this._onInput);\r\n    this.el.removeEventListener('drop', this._onDrop);\r\n    this.el.removeEventListener('click', this.alignCursorFriendly);\r\n    this.el.removeEventListener('change', this._onChange);\r\n  }\r\n\r\n  /**\r\n    Fires custom event\r\n    @protected\r\n   */\r\n  _fireEvent (ev: string) {\r\n    const listeners = this._listeners[ev] || [];\r\n    listeners.forEach(l => l());\r\n  }\r\n\r\n  /**\r\n    Current selection start\r\n    @readonly\r\n  */\r\n  get selectionStart (): number {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionStart;\r\n  }\r\n\r\n  /** Current cursor position */\r\n  get cursorPos (): number {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionEnd;\r\n  }\r\n  set cursorPos (pos: number) {\r\n    if (this.el !== document.activeElement) return;\r\n\r\n    this.el.setSelectionRange(pos, pos);\r\n    this._saveSelection();\r\n  }\r\n\r\n  /**\r\n    Stores current selection\r\n    @protected\r\n  */\r\n  _saveSelection (/* ev */) {\r\n    if (this.value !== this.el.value) {\r\n      console.warn('Uncontrolled input change, refresh mask manually!'); // eslint-disable-line no-console\r\n    }\r\n    this._selection = {\r\n      start: this.selectionStart,\r\n      end: this.cursorPos\r\n    };\r\n  }\r\n\r\n  /** Syncronizes model value from view */\r\n  updateValue () {\r\n    this.masked.value = this.el.value;\r\n  }\r\n\r\n  /** Syncronizes view from model value, fires change events */\r\n  updateControl () {\r\n    const newUnmaskedValue = this.masked.unmaskedValue;\r\n    const newValue = this.masked.value;\r\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\r\n      this.value !== newValue);\r\n\r\n    this._unmaskedValue = newUnmaskedValue;\r\n    this._value = newValue;\r\n\r\n    if (this.el.value !== newValue) this.el.value = newValue;\r\n    if (isChanged) this._fireChangeEvents();\r\n  }\r\n\r\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\r\n  updateOptions (opts: {[string]: any}) {\r\n    opts = Object.assign({}, opts);  // clone\r\n    if (opts.mask === Date && this.masked instanceof MaskedDate) delete opts.mask;\r\n\r\n    // check if changed\r\n    if (objectIncludes(this.masked, opts)) return;\r\n\r\n    this.masked.updateOptions(opts);\r\n    this.updateControl();\r\n  }\r\n\r\n  /** Updates cursor */\r\n  updateCursor (cursorPos: number) {\r\n    if (cursorPos == null) return;\r\n    this.cursorPos = cursorPos;\r\n\r\n    // also queue change cursor for mobile browsers\r\n    this._delayUpdateCursor(cursorPos);\r\n  }\r\n\r\n  /**\r\n    Delays cursor update to support mobile browsers\r\n    @private\r\n  */\r\n  _delayUpdateCursor (cursorPos: number) {\r\n    this._abortUpdateCursor();\r\n    this._changingCursorPos = cursorPos;\r\n    this._cursorChanging = setTimeout(() => {\r\n      if (!this.el) return; // if was destroyed\r\n      this.cursorPos = this._changingCursorPos;\r\n      this._abortUpdateCursor();\r\n    }, 10);\r\n  }\r\n\r\n  /**\r\n    Fires custom events\r\n    @protected\r\n  */\r\n  _fireChangeEvents () {\r\n    this._fireEvent('accept');\r\n    if (this.masked.isComplete) this._fireEvent('complete');\r\n  }\r\n\r\n  /**\r\n    Aborts delayed cursor update\r\n    @private\r\n  */\r\n  _abortUpdateCursor () {\r\n    if (this._cursorChanging) {\r\n      clearTimeout(this._cursorChanging);\r\n      delete this._cursorChanging;\r\n    }\r\n  }\r\n\r\n  /** Aligns cursor to nearest available position */\r\n  alignCursor () {\r\n    this.cursorPos = this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT);\r\n  }\r\n\r\n  /** Aligns cursor only if selection is empty */\r\n  alignCursorFriendly () {\r\n    if (this.selectionStart !== this.cursorPos) return;\r\n    this.alignCursor();\r\n  }\r\n\r\n  /** Adds listener on custom event */\r\n  on (ev: string, handler: Function) {\r\n    if (!this._listeners[ev]) this._listeners[ev] = [];\r\n    this._listeners[ev].push(handler);\r\n    return this;\r\n  }\r\n\r\n  /** Removes custom event listener */\r\n  off (ev: string, handler: Function) {\r\n    if (!this._listeners[ev]) return;\r\n    if (!handler) {\r\n      delete this._listeners[ev];\r\n      return;\r\n    }\r\n    const hIndex = this._listeners[ev].indexOf(handler);\r\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\r\n    return this;\r\n  }\r\n\r\n  /** Handles view input event */\r\n  _onInput () {\r\n    this._abortUpdateCursor();\r\n\r\n    const details = new ActionDetails(\r\n      // new state\r\n      this.el.value, this.cursorPos,\r\n      // old state\r\n      this.value, this._selection);\r\n\r\n    const offset = this.masked.splice(\r\n      details.startChangePos,\r\n      details.removed.length,\r\n      details.inserted,\r\n      details.removeDirection).offset;\r\n\r\n    const cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, details.removeDirection);\r\n\r\n    this.updateControl();\r\n    this.updateCursor(cursorPos);\r\n  }\r\n\r\n  /** Handles view change event and commits model value */\r\n  _onChange () {\r\n    if (this.value !== this.el.value) {\r\n      this.updateValue();\r\n    }\r\n    this.masked.doCommit();\r\n    this.updateControl();\r\n  }\r\n\r\n  /** Handles view drop event, prevents by default */\r\n  _onDrop (ev: Event) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  /** Unbind view events and removes element reference */\r\n  destroy () {\r\n    this._unbindEvents();\r\n    // $FlowFixMe why not do so?\r\n    this._listeners.length = 0;\r\n    delete this.el;\r\n  }\r\n}\r\n","// @flow\r\nimport {escapeRegExp, indexInDirection, type Direction} from '../core/utils.js';\r\nimport Masked, {type MaskedOptions, type AppendFlags} from './base.js';\r\nimport {type TailDetails} from '../core/tail-details.js';\r\n\r\n\r\ntype MaskedNumberOptions = {\r\n  ...MaskedOptions<Number>,\r\n  radix: $PropertyType<MaskedNumber, 'radix'>,\r\n  thousandsSeparator: $PropertyType<MaskedNumber, 'thousandsSeparator'>,\r\n  mapToRadix: $PropertyType<MaskedNumber, 'mapToRadix'>,\r\n  scale: $PropertyType<MaskedNumber, 'scale'>,\r\n  signed: $PropertyType<MaskedNumber, 'signed'>,\r\n  normalizeZeros: $PropertyType<MaskedNumber, 'normalizeZeros'>,\r\n  padFractionalZeros: $PropertyType<MaskedNumber, 'padFractionalZeros'>,\r\n};\r\n\r\n/**\r\n  Number mask\r\n  @param {Object} opts\r\n  @param {string} opts.radix - Single char\r\n  @param {string} opts.thousandsSeparator - Single char\r\n  @param {Array<string>} opts.mapToRadix - Array of single chars\r\n  @param {number} opts.min\r\n  @param {number} opts.max\r\n  @param {number} opts.scale - Digits after point\r\n  @param {boolean} opts.signed - Allow negative\r\n  @param {boolean} opts.normalizeZeros - Flag to remove leading and trailing zeros in the end of editing\r\n  @param {boolean} opts.padFractionalZeros - Flag to pad trailing zeros after point in the end of editing\r\n*/\r\nexport default\r\nclass MaskedNumber extends Masked<Number> {\r\n  static DEFAULTS: $Shape<MaskedNumberOptions>;\r\n\r\n  /** Single char */\r\n  radix: string;\r\n  /** Single char */\r\n  thousandsSeparator: string;\r\n  /** Array of single chars */\r\n  mapToRadix: Array<string>;\r\n  /** */\r\n  min: number;\r\n  /** */\r\n  max: number;\r\n  /** Digits after point */\r\n  scale: number;\r\n  /** */\r\n  signed: boolean;\r\n  /** Flag to remove leading and trailing zeros in the end of editing */\r\n  normalizeZeros: boolean;\r\n  /** Flag to pad trailing zeros after point in the end of editing */\r\n  padFractionalZeros: boolean;\r\n  _numberRegExp: RegExp;\r\n  _numberRegExpInput: RegExp;\r\n  _thousandsSeparatorRegExp: RegExp;\r\n  _mapToRadixRegExp: RegExp;\r\n\r\n  constructor (opts: $Shape<MaskedNumberOptions>) {\r\n    super({\r\n      ...MaskedNumber.DEFAULTS,\r\n      ...opts\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: MaskedNumberOptions) {\r\n    super._update(opts);\r\n    this._updateRegExps();\r\n  }\r\n\r\n  /** */\r\n  _updateRegExps () {\r\n    // use different regexp to process user input (more strict, input suffix) and tail shifting\r\n    const start = '^'\r\n\r\n    let midInput = '';\r\n    let mid = '';\r\n    if (this.allowNegative) {\r\n      midInput += '([+|\\\\-]?|([+|\\\\-]?(0|([1-9]+\\\\d*))))';\r\n      mid += '[+|\\\\-]?';\r\n    } else {\r\n      midInput += '(0|([1-9]+\\\\d*))';\r\n    }\r\n    mid += '\\\\d*';\r\n\r\n    let end = (this.scale ?\r\n      '(' + this.radix + '\\\\d{0,' + this.scale + '})?' :\r\n      '') + '$';\r\n\r\n    this._numberRegExpInput = new RegExp(start + midInput + end);\r\n    this._numberRegExp = new RegExp(start + mid + end);\r\n    this._mapToRadixRegExp = new RegExp('[' +\r\n      this.mapToRadix.map(escapeRegExp).join('') +\r\n    ']', 'g');\r\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _extractTail (fromPos: number=0, toPos: number=this.value.length): TailDetails {\r\n    const tail = super._extractTail(fromPos, toPos);\r\n\r\n    return {\r\n      ...tail,\r\n      value: this._removeThousandsSeparators(tail.value),\r\n    };\r\n  }\r\n\r\n  /** */\r\n  _removeThousandsSeparators (value: string): string {\r\n    return value.replace(this._thousandsSeparatorRegExp, '');\r\n  }\r\n\r\n  /** */\r\n  _insertThousandsSeparators (value: string): string {\r\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\r\n    const parts = value.split(this.radix);\r\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\r\n    return parts.join(this.radix);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doPrepare (str: string, ...args: *) {\r\n    return super.doPrepare(this._removeThousandsSeparators(str.replace(this._mapToRadixRegExp, this.radix)), ...args);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  appendWithTail (...args: *) {\r\n    let previousValue = this.value;\r\n    this._value = this._removeThousandsSeparators(this.value);\r\n    let startChangePos = this.value.length;\r\n\r\n    const appendDetails = super.appendWithTail(...args);\r\n    this._value = this._insertThousandsSeparators(this.value);\r\n\r\n    // calculate offsets after insert separators\r\n    let beforeTailPos = startChangePos + appendDetails.inserted.length;\r\n    for (let pos = 0; pos <= beforeTailPos; ++pos) {\r\n      if (this.value[pos] === this.thousandsSeparator) {\r\n        if (pos < startChangePos ||\r\n          // check high bound\r\n          // if separator is still there - consider it also\r\n          (pos === startChangePos && previousValue[pos] === this.thousandsSeparator)) {\r\n          ++startChangePos;\r\n        }\r\n        if (pos < beforeTailPos) ++beforeTailPos;\r\n      }\r\n    }\r\n\r\n    // adjust details with separators\r\n    appendDetails.rawInserted = appendDetails.inserted;\r\n    appendDetails.inserted = this.value.slice(startChangePos, beforeTailPos);\r\n    appendDetails.shift += startChangePos - previousValue.length;\r\n\r\n    return appendDetails;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\r\n    if (!direction) return cursorPos;\r\n\r\n    const nextPos = indexInDirection(cursorPos, direction);\r\n    if (this.value[nextPos] === this.thousandsSeparator) cursorPos += direction;\r\n    return cursorPos;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (flags: AppendFlags) {\r\n    const regexp = flags.input ? this._numberRegExpInput : this._numberRegExp;\r\n\r\n    // validate as string\r\n    let valid = regexp.test(this._removeThousandsSeparators(this.value));\r\n\r\n    if (valid) {\r\n      // validate as number\r\n      const number = this.number;\r\n      valid = valid && !isNaN(number) &&\r\n        // check min bound for negative values\r\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\r\n        // check max bound for positive values\r\n        (this.max == null || this.max <= 0 || this.number <= this.max);\r\n    }\r\n\r\n    return valid && super.doValidate(flags);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doCommit () {\r\n    const number = this.number;\r\n    let validnum = number;\r\n\r\n    // check bounds\r\n    if (this.min != null) validnum = Math.max(validnum, this.min);\r\n    if (this.max != null) validnum = Math.min(validnum, this.max);\r\n\r\n    if (validnum !== number) this.unmaskedValue = String(validnum);\r\n\r\n    let formatted = this.value;\r\n\r\n    if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\r\n    if (this.padFractionalZeros) formatted = this._padFractionalZeros(formatted);\r\n\r\n    this._value = formatted;\r\n    super.doCommit();\r\n  }\r\n\r\n  /** */\r\n  _normalizeZeros (value: string): string {\r\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\r\n\r\n    // remove leading zeros\r\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\r\n    // add leading zero\r\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\r\n\r\n    if (parts.length > 1) {\r\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\r\n      if (!parts[1].length) parts.length = 1;  // remove fractional\r\n    }\r\n\r\n    return this._insertThousandsSeparators(parts.join(this.radix));\r\n  }\r\n\r\n  /** */\r\n  _padFractionalZeros (value: string): string {\r\n    if (!value) return value;\r\n\r\n    const parts = value.split(this.radix);\r\n    if (parts.length < 2) parts.push('');\r\n    parts[1] = parts[1].padEnd(this.scale, '0');\r\n    return parts.join(this.radix);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get unmaskedValue (): string {\r\n    return this._removeThousandsSeparators(\r\n      this._normalizeZeros(\r\n        this.value))\r\n      .replace(this.radix, '.');\r\n  }\r\n\r\n  set unmaskedValue (unmaskedValue: string) {\r\n    super.unmaskedValue = unmaskedValue.replace('.', this.radix);\r\n  }\r\n\r\n  /** Parsed Number */\r\n  get number (): number {\r\n    return Number(this.unmaskedValue);\r\n  }\r\n\r\n  set number (number: number) {\r\n    this.unmaskedValue = String(number);\r\n  }\r\n\r\n  /**\r\n    Is negative allowed\r\n    @readonly\r\n  */\r\n  get allowNegative (): boolean {\r\n    return this.signed ||\r\n      (this.min != null && this.min < 0) ||\r\n      (this.max != null && this.max < 0);\r\n  }\r\n}\r\nMaskedNumber.DEFAULTS = {\r\n  radix: ',',\r\n  thousandsSeparator: '',\r\n  mapToRadix: ['.'],\r\n  scale: 2,\r\n  signed: false,\r\n  normalizeZeros: true,\r\n  padFractionalZeros: false,\r\n};\r\n","// @flow\r\nimport Masked, {type MaskedOptions} from './base.js';\r\n\r\n\r\n/** Masking by RegExp */\r\nexport default\r\nclass MaskedRegExp extends Masked<RegExp> {\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: $Shape<MaskedOptions<RegExp>>) {\r\n    opts.validate = (value) => value.search(opts.mask) >= 0;\r\n    super._update(opts);\r\n  }\r\n}\r\n","// @flow\r\nimport Masked, {type MaskedOptions} from './base.js';\r\n\r\n\r\n/** Masking by custom Function */\r\nexport default\r\nclass MaskedFunction extends Masked<Function> {\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: MaskedOptions<Function>) {\r\n    opts.validate = opts.mask;\r\n    super._update(opts);\r\n  }\r\n}\r\n","// @flow\r\nimport ChangeDetails from '../core/change-details.js';\r\nimport createMask from './factory.js';\r\nimport Masked, {type AppendFlags} from './base.js';\r\nimport {type TailDetails} from '../core/tail-details.js';\r\n\r\n\r\ntype DynamicMaskType = Array<{[string]: any}>;\r\n/** Dynamic mask for choosing apropriate mask in run-time */\r\nexport default\r\nclass MaskedDynamic extends Masked<DynamicMaskType> {\r\n  /** Currently chosen mask */\r\n  currentMask: ?Masked<*>;\r\n  /** Compliled {@link Masked} options */\r\n  compiledMasks: Array<Masked<*>>;\r\n  /** Chooses {@link Masked} depending on input value */\r\n  dispatch: (string, Masked<*>, AppendFlags) => Masked<*>;\r\n\r\n  /**\r\n    @param {Object} opts\r\n  */\r\n  constructor (opts: any) {\r\n    super({\r\n      ...MaskedDynamic.DEFAULTS,\r\n      ...opts\r\n    });\r\n\r\n    this.currentMask = null;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: any) {\r\n    super._update(opts);\r\n    // mask could be totally dynamic with only `dispatch` option\r\n    this.compiledMasks = Array.isArray(opts.mask) ?\r\n      opts.mask.map(m => createMask(m)) :\r\n      [];\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _append (str: string, ...args: *): ChangeDetails {\r\n    str = this.doPrepare(str, ...args);\r\n\r\n    const details = this._applyDispatch(str, ...args);\r\n\r\n    if (this.currentMask) {\r\n      details.aggregate(this.currentMask._append(str, ...args));\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  _applyDispatch (appended: string='', ...args: *) {\r\n    const oldValueLength = this.value.length;\r\n    const inputValue = this.rawInputValue;\r\n    const oldMask = this.currentMask;\r\n    const details = new ChangeDetails();\r\n\r\n    // dispatch SHOULD NOT modify mask\r\n    this.currentMask = this.doDispatch(appended, ...args);\r\n\r\n    // restore state after dispatch\r\n    if (this.currentMask && this.currentMask !== oldMask) {\r\n      // if mask changed reapply input\r\n      this.currentMask.reset();\r\n      // $FlowFixMe - it's ok, we don't change current mask\r\n      this.currentMask._append(inputValue, {raw: true});\r\n      details.shift = this.value.length - oldValueLength;\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doDispatch(appended: string, flags: AppendFlags={}) {\r\n    return this.dispatch(appended, this, flags);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  clone (): MaskedDynamic {\r\n    const m = new MaskedDynamic(this);\r\n    m._value = this.value;\r\n\r\n    // try to keep reference to compiled masks\r\n    const currentMaskIndex = this.compiledMasks.indexOf(this.currentMask);\r\n    if (this.currentMask) {\r\n      m.currentMask = currentMaskIndex >= 0 ?\r\n        m.compiledMasks[currentMaskIndex].assign(this.currentMask) :\r\n        this.currentMask.clone();\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  reset () {\r\n    if (this.currentMask) this.currentMask.reset();\r\n    this.compiledMasks.forEach(cm => cm.reset());\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get value (): string {\r\n    return this.currentMask ? this.currentMask.value : '';\r\n  }\r\n\r\n  set value (value: string) {\r\n    super.value = value;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get unmaskedValue (): string {\r\n    return this.currentMask ? this.currentMask.unmaskedValue : '';\r\n  }\r\n\r\n  set unmaskedValue (unmaskedValue: string) {\r\n    super.unmaskedValue = unmaskedValue;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get isComplete (): boolean {\r\n    return !!this.currentMask && this.currentMask.isComplete;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  remove (...args: *): ChangeDetails {\r\n    const details: ChangeDetails = new ChangeDetails();\r\n    if (this.currentMask) {\r\n      details.aggregate(this.currentMask.remove(...args))\r\n        // update with dispatch\r\n        .aggregate(this._applyDispatch());\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractInput (...args: *): string {\r\n    return this.currentMask ?\r\n      this.currentMask.extractInput(...args) :\r\n      '';\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _extractTail (...args: *): TailDetails {\r\n    return this.currentMask ?\r\n      this.currentMask._extractTail(...args) :\r\n      super._extractTail(...args);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _appendTail (tail?: TailDetails): ChangeDetails {\r\n    const details = new ChangeDetails();\r\n    if (tail) details.aggregate(this._applyDispatch(tail.value));\r\n\r\n    return details.aggregate(this.currentMask ?\r\n      this.currentMask._appendTail(tail) :\r\n      super._appendTail(tail));\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doCommit () {\r\n    if (this.currentMask) this.currentMask.doCommit();\r\n    super.doCommit();\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  nearestInputPos(...args: *): number {\r\n    return this.currentMask ?\r\n      this.currentMask.nearestInputPos(...args) :\r\n      super.nearestInputPos(...args);\r\n  }\r\n}\r\n\r\nMaskedDynamic.DEFAULTS = {\r\n  dispatch: (appended, masked, flags) => {\r\n    if (!masked.compiledMasks.length) return;\r\n\r\n    const inputValue = masked.rawInputValue;\r\n\r\n    // simulate input\r\n    const inputs = masked.compiledMasks.map((cm, index) => {\r\n      const m = cm.clone();\r\n      m.rawInputValue = inputValue;\r\n      m._append(appended, flags);\r\n\r\n      return {value: m.rawInputValue.length, index};\r\n    });\r\n\r\n    // pop masks with longer values first\r\n    inputs.sort((i1, i2) => i2.value - i1.value);\r\n\r\n    return masked.compiledMasks[inputs[0].index];\r\n  }\r\n};\r\n","import {g} from './core/utils.js';\r\n\r\nimport InputMask from './controls/input.js';\r\n\r\nimport Masked from './masked/base.js';\r\nimport MaskedPattern from './masked/pattern.js';\r\nimport MaskedNumber from './masked/number.js';\r\nimport MaskedDate from './masked/date.js';\r\nimport MaskedRegExp from './masked/regexp.js';\r\nimport MaskedFunction from './masked/function.js';\r\nimport MaskedDynamic from './masked/dynamic.js';\r\nimport createMask from './masked/factory.js';\r\n\r\n\r\n/**\r\n * Applies mask on element.\r\n * @constructor\r\n * @param {HTMLInput|UIElement} el - Element to apply mask\r\n * @param {Object} opts - Custom mask options\r\n * @return {InputMask}\r\n */\r\nexport default\r\nfunction IMask (el, opts={}) {\r\n\t// currently available only for input-like elements\r\n  return new InputMask(el, opts);\r\n}\r\n\r\n/** {@link InputMask} */\r\nIMask.InputMask = InputMask;\r\n\r\n/** {@link Masked} */\r\nIMask.Masked = Masked;\r\n/** {@link MaskedPattern} */\r\nIMask.MaskedPattern = MaskedPattern;\r\n/** {@link MaskedNumber} */\r\nIMask.MaskedNumber = MaskedNumber;\r\n/** {@link MaskedDate} */\r\nIMask.MaskedDate = MaskedDate;\r\n/** {@link MaskedRegExp} */\r\nIMask.MaskedRegExp = MaskedRegExp;\r\n/** {@link MaskedFunction} */\r\nIMask.MaskedFunction = MaskedFunction;\r\n/** {@link MaskedDynamic} */\r\nIMask.MaskedDynamic = MaskedDynamic;\r\n/** {@link createMask} */\r\nIMask.createMask = createMask;\r\n\r\ng.IMask = IMask;\r\n"],"names":["it","undefined","TypeError","hasOwnProperty","key","call","toString","Object","propertyIsEnumerable","slice","split","IObject","defined","ceil","Math","floor","isNaN","min","toInteger","max","IS_INCLUDES","global","module","window","self","Function","__g","SHARED","store","id","px","random","concat","shared","arrayIndexOf","$this","el","fromIndex","index","length","value","O","toIObject","toLength","IE_PROTO","uid","keys","object","names","i","result","has","push","$keys","enumBugKeys","core","version","__e","isObject","exec","e","require$$0","defineProperty","get","a","document","is","createElement","require$$1","dP","P","Attributes","anObject","S","fn","val","valueOf","toPrimitive","IE8_DOM_DEFINE","f","enumerable","bitmap","configurable","writable","SRC","TO_STRING","$toString","TPL","inspectSource","safe","isFunction","hide","join","String","prototype","this","that","aFunction","b","c","apply","arguments","PROTOTYPE","$export","type","name","source","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","target","exports","expProto","ctx","redefine","U","W","R","KEY","fails","count","str","res","n","Infinity","RangeError","repeat","maxLength","fillString","left","stringLength","fillStr","intMaxLength","fillLen","stringFiller","navigator","userAgent","test","padStart","$pad","padEnd","isString","conform","fallback","DIRECTION","indexInDirection","pos","direction","LEFT","escapeRegExp","replace","g","ActionDetails","cursorPos","oldValue","oldSelection","startChangePos","start","substr","insertedCount","end","removedCount","substring","NONE","RIGHT","ChangeDetails","details","rawInserted","inserted","shift","overflow","_rawInserted","Masked","opts","_value","_update","DEFAULTS","isInitialized","withValueRefresh","bind","m","babelHelpers.extends","reset","_append","input","_appendTail","doCommit","fromPos","toPos","extractInput","tail","flags","oldValueLength","consistentValue","clone","doPrepare","ci","doValidate","assign","aggregateDetails","consistentAppended","ch","appendDetails","aggregate","from","_refreshing","unmasked","unmaskedValue","ret","prepare","validate","commit","deleteCount","removeDirection","tailPos","_extractTail","nearestInputPos","remove","appendWithTail","resolve","raw","maskedClass","mask","Error","RegExp","IMask","MaskedRegExp","MaskedPattern","Date","MaskedDate","Number","MaskedNumber","Array","isArray","MaskedDynamic","MaskedFunction","warn","createMask","PatternDefinition","_masked","isHollow","isRawInput","TYPES","INPUT","optional","PatternGroup","masked","offset","mapDefIndexToPos","RangeGroup","to","maxlen","_from","_to","_maxLength","minstr","maxstr","match","placeholder","num","search","_matchFrom","Range","Enum","enums","group","some","indexOf","ChunksTailDetails","chunks","map","firstChunk","stop","lastChunk","definitions","_rebuildMask","defs","_charDefs","_groupDefs","pattern","unmaskingBlock","optionalBlock","stopAlign","_this2","groups","p","gNames","filter","gName","sort","char","FIXED","unmasking","STOP_CHAR","ESCAPE_CHAR","args","every","forEach","d","_this3","defIndex","isHiddenHollow","hiddenHollowsBefore","di","def","_appendChunks","_appendPlaceholder","mapPosToDefIndex","resolved","skipped","chres","lazy","placeholderChar","fromDef","_extractInputChunks","toDefIndex","isInput","fromDefIndex","stopDefIndices","stops","s","_this4","maxDefIndex","step","initialDefIndex","initialDef","firstInputIndex","firstFilledInputIndex","firstVisibleHollowIndex","nextdi","nextDef","groupsByName","_this5","Definition","Group","GET_DEFAULT_GROUPS","Y","getFullYear","valid","date","isComplete","isDateExist","format","parse","getDate","getMonth","day","month","year","InputMask","_listeners","_unmaskedValue","_saveSelection","_onInput","_onChange","_onDrop","alignCursor","alignCursorFriendly","_bindEvents","updateValue","addEventListener","removeEventListener","ev","l","_selection","selectionStart","newUnmaskedValue","newValue","isChanged","_fireChangeEvents","objectIncludes","arrA","arrB","dateA","dateB","getTime","regexpA","regexpB","updateOptions","updateControl","_delayUpdateCursor","_abortUpdateCursor","_changingCursorPos","_cursorChanging","setTimeout","_this","_fireEvent","handler","hIndex","splice","removed","updateCursor","preventDefault","stopPropagation","_unbindEvents","constructor","selectionEnd","activeElement","setSelectionRange","_updateRegExps","midInput","mid","allowNegative","scale","radix","_numberRegExpInput","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","_removeThousandsSeparators","parts","previousValue","_insertThousandsSeparators","beforeTailPos","nextPos","number","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","signed","currentMask","compiledMasks","_applyDispatch","appended","inputValue","rawInputValue","oldMask","doDispatch","dispatch","currentMaskIndex","cm","inputs","i1","i2"],"mappings":"iLACA,MAAiB,SAAUA,GACzB,QAAUC,GAAND,EAAiB,MAAME,UAAU,yBAA2BF,GAChE,OAAOA,GCHLG,KAAoBA,iBACP,SAAUH,EAAII,GAC7B,OAAOD,EAAeE,KAAKL,EAAII,ICF7BE,KAAcA,WCGDC,OAAO,KAAKC,qBAAqB,GAAKD,OAAS,SAAUP,GACxE,MAAkB,WDFOA,ECEdA,EDDJM,EAASD,KAAKL,GAAIS,MAAM,GAAI,ICCNT,EAAGU,MAAM,IAAMH,OAAOP,GDFpC,IAAUA,KECV,SAAUA,GACzB,OAAOW,EAAQC,EAAQZ,KCHrBa,EAAOC,KAAKD,KACZE,EAAQD,KAAKC,QACA,SAAUf,GACzB,OAAOgB,MAAMhB,GAAMA,GAAM,GAAKA,EAAK,EAAIe,EAAQF,GAAMb,ICFnDiB,EAAMH,KAAKG,MACE,SAAUjB,GACzB,OAAOA,EAAK,EAAIiB,EAAIC,EAAUlB,GAAK,kBAAoB,GCHrDmB,EAAML,KAAKK,IACXF,EAAMH,KAAKG,qECCYb,ECEAgB,ECHAhB,kBCD3B,IAAIiB,EAASC,UAAkC,oBAAVC,QAAyBA,OAAOT,MAAQA,KACzES,OAAwB,oBAARC,MAAuBA,KAAKV,MAAQA,KAAOU,KAE3DC,SAAS,cAATA,GACc,iBAAPC,MAAiBA,IAAML,KHJ9BM,EAAS,qBACTC,EAAQP,EAAOM,KAAYN,EAAOM,OIFlCE,EAAK,EACLC,EAAKhB,KAAKiB,WACG,SAAU3B,GACzB,MAAO,UAAU4B,YAAe/B,IAARG,EAAoB,GAAKA,EAAK,QAASyB,EAAKC,GAAIxB,SAAS,MFH/E2B,EFIKL,EADkBxB,EEHO,UFIVwB,EAAMxB,OKF1B8B,GJGuBd,GIHqB,EJIvC,SAAUe,EAAOC,EAAIC,GAC1B,IFJuBC,EAAOC,EEO1BC,EAHAC,EAAIC,EAAUP,GACdI,EAASI,EAASF,EAAEF,QACpBD,GFN0BC,EEMSA,GFLzCD,EAAQpB,EADiBoB,EEMKD,IFJf,EAAIlB,EAAImB,EAAQC,EAAQ,GAAKtB,EAAIqB,EAAOC,IEQrD,GAAInB,GAAegB,GAAMA,GAAI,KAAOG,EAASD,GAG3C,IAFAE,EAAQC,EAAEH,OAEGE,EAAO,OAAO,OAEtB,KAAMD,EAASD,EAAOA,IAAS,IAAIlB,GAAekB,KAASG,IAC5DA,EAAEH,KAAWF,EAAI,OAAOhB,GAAekB,GAAS,EACpD,OAAQlB,IAAgB,IIjB1BwB,EHAKX,EADkB7B,EGCa,cHAf6B,EAAO7B,GAAOyC,EAAIzC,MIF1B,gGAEfM,MAAM,OCCSH,OAAOuC,MAAQ,SAAcL,GAC5C,OFAe,SAAUM,EAAQC,GACjC,IAGI5C,EAHAqC,EAAIC,EAAUK,GACdE,EAAI,EACJC,KAEJ,IAAK9C,KAAOqC,EAAOrC,GAAOwC,GAAUO,EAAIV,EAAGrC,IAAQ8C,EAAOE,KAAKhD,GAE/D,KAAO4C,EAAMT,OAASU,GAAOE,EAAIV,EAAGrC,EAAM4C,EAAMC,SAC7Cf,EAAagB,EAAQ9C,IAAQ8C,EAAOE,KAAKhD,IAE5C,OAAO8C,EEVAG,CAAMZ,EAAGa,oBCLlB,IAAIC,EAAOjC,WAAmBkC,QAAS,SACrB,iBAAPC,MAAiBA,IAAMF,kBCDjB,SAAUvD,GACzB,MAAqB,iBAAPA,EAAyB,OAAPA,EAA4B,mBAAPA,MCAtC,SAAUA,GACzB,IAAK0D,EAAS1D,GAAK,MAAME,UAAUF,EAAK,sBACxC,OAAOA,KCHQ,SAAU2D,GACzB,IACE,QAASA,IACT,MAAOC,GACP,OAAO,OCHOC,EAAoB,WACpC,OAA+E,GAAxEtD,OAAOuD,kBAAmB,KAAOC,IAAK,WAAc,OAAO,KAAQC,ICDxEC,EAAWJ,EAAqBI,SAEhCC,EAAKR,EAASO,IAAaP,EAASO,EAASE,kBCH/BN,IAA8BO,EAAoB,WAClE,OAA4G,GAArG7D,OAAOuD,gBDGW9D,ECH6B,MDI/CkE,EAAKD,EAASE,cAAcnE,OCJ2B,KAAO+D,IAAK,WAAc,OAAO,KAAQC,EDGxF,IAAUhE,IEDvBqE,EAAK9D,OAAOuD,oBAEJD,EAA4BtD,OAAOuD,eAAiB,SAAwBrB,EAAG6B,EAAGC,GAI5F,GAHAC,EAAS/B,GACT6B,ECHe,SAAUtE,EAAIyE,GAC7B,IAAKf,EAAS1D,GAAK,OAAOA,EAC1B,IAAI0E,EAAIC,EACR,GAAIF,GAAkC,mBAArBC,EAAK1E,EAAGM,YAA4BoD,EAASiB,EAAMD,EAAGrE,KAAKL,IAAM,OAAO2E,EACzF,GAAgC,mBAApBD,EAAK1E,EAAG4E,WAA2BlB,EAASiB,EAAMD,EAAGrE,KAAKL,IAAM,OAAO2E,EACnF,IAAKF,GAAkC,mBAArBC,EAAK1E,EAAGM,YAA4BoD,EAASiB,EAAMD,EAAGrE,KAAKL,IAAM,OAAO2E,EAC1F,MAAMzE,UAAU,2CDHZ2E,CAAYP,GAAG,GACnBE,EAASD,GACLO,EAAgB,IAClB,OAAOT,EAAG5B,EAAG6B,EAAGC,GAChB,MAAOX,IACT,GAAI,QAASW,GAAc,QAASA,EAAY,MAAMrE,UAAU,4BAEhE,MADI,UAAWqE,IAAY9B,EAAE6B,GAAKC,EAAW/B,OACtCC,MEZQoB,EAA4B,SAAUd,EAAQ3C,EAAKoC,GAClE,OAAO6B,EAAGU,EAAEhC,EAAQ3C,GCDlB4E,aAAuB,GAFAC,EDGW,ICAlCC,eAAyB,EAATD,GAChBE,WAAqB,EAATF,GACZzC,MDFqCA,ICHxB,IAAUyC,GDIvB,SAAUlC,EAAQ3C,EAAKoC,GAEzB,OADAO,EAAO3C,GAAOoC,EACPO,mBEHT,IAAIqC,EAAMvB,EAAkB,OACxBwB,EAAY,WACZC,EAAY7D,SAAS4D,GACrBE,GAAO,GAAKD,GAAW5E,MAAM2E,GAEjCjB,EAAmBoB,cAAgB,SAAUxF,GAC3C,OAAOsF,EAAUjF,KAAKL,KAGvBsB,UAAiB,SAAUmB,EAAGrC,EAAKuE,EAAKc,GACvC,IAAIC,EAA2B,mBAAPf,EACpBe,IAAYvC,EAAIwB,EAAK,SAAWgB,EAAKhB,EAAK,OAAQvE,IAClDqC,EAAErC,KAASuE,IACXe,IAAYvC,EAAIwB,EAAKS,IAAQO,EAAKhB,EAAKS,EAAK3C,EAAErC,GAAO,GAAKqC,EAAErC,GAAOmF,EAAIK,KAAKC,OAAOzF,MACnFqC,IAAMpB,EACRoB,EAAErC,GAAOuE,EACCc,EAGDhD,EAAErC,GACXqC,EAAErC,GAAOuE,EAETgB,EAAKlD,EAAGrC,EAAKuE,WALNlC,EAAErC,GACTuF,EAAKlD,EAAGrC,EAAKuE,OAOdlD,SAASqE,UAAWT,EAAW,WAChC,MAAsB,mBAARU,MAAsBA,KAAKX,IAAQE,EAAUjF,KAAK0F,YC3BjD,SAAUrB,EAAIsB,EAAMzD,GAEnC,GCJe,SAAUvC,GACzB,GAAiB,mBAANA,EAAkB,MAAME,UAAUF,EAAK,uBDElDiG,CAAUvB,QACGzE,IAAT+F,EAAoB,OAAOtB,EAC/B,OAAQnC,GACN,KAAK,EAAG,OAAO,SAAUyB,GACvB,OAAOU,EAAGrE,KAAK2F,EAAMhC,IAEvB,KAAK,EAAG,OAAO,SAAUA,EAAGkC,GAC1B,OAAOxB,EAAGrE,KAAK2F,EAAMhC,EAAGkC,IAE1B,KAAK,EAAG,OAAO,SAAUlC,EAAGkC,EAAGC,GAC7B,OAAOzB,EAAGrE,KAAK2F,EAAMhC,EAAGkC,EAAGC,IAG/B,OAAO,WACL,OAAOzB,EAAG0B,MAAMJ,EAAMK,aEZtBC,EAAY,YAEZC,EAAU,SAAUC,EAAMC,EAAMC,GAClC,IAQItG,EAAKuG,EAAKC,EAAKC,EARfC,EAAYN,EAAOD,EAAQQ,EAC3BC,EAAYR,EAAOD,EAAQU,EAC3BC,EAAYV,EAAOD,EAAQ9B,EAC3B0C,EAAWX,EAAOD,EAAQjC,EAC1B8C,EAAUZ,EAAOD,EAAQc,EACzBC,EAASN,EAAY3F,EAAS6F,EAAY7F,EAAOoF,KAAUpF,EAAOoF,QAAepF,EAAOoF,QAAaH,GACrGiB,EAAUP,EAAYzD,EAAOA,EAAKkD,KAAUlD,EAAKkD,OACjDe,EAAWD,EAAQjB,KAAeiB,EAAQjB,OAE1CU,IAAWN,EAASD,GACxB,IAAKrG,KAAOsG,EAIVE,IAFAD,GAAOG,GAAaQ,QAA0BrH,IAAhBqH,EAAOlH,IAExBkH,EAASZ,GAAQtG,GAE9ByG,EAAMO,GAAWT,EAAMc,EAAIb,EAAKvF,GAAU8F,GAA0B,mBAAPP,EAAoBa,EAAIhG,SAASpB,KAAMuG,GAAOA,EAEvGU,GAAQI,EAASJ,EAAQlH,EAAKwG,EAAKJ,EAAOD,EAAQoB,GAElDJ,EAAQnH,IAAQwG,GAAKjB,EAAK4B,EAASnH,EAAKyG,GACxCM,GAAYK,EAASpH,IAAQwG,IAAKY,EAASpH,GAAOwG,IAG1DvF,EAAOkC,KAAOA,EAEdgD,EAAQQ,EAAI,EACZR,EAAQU,EAAI,EACZV,EAAQ9B,EAAI,EACZ8B,EAAQjC,EAAI,EACZiC,EAAQc,EAAI,GACZd,EAAQqB,EAAI,GACZrB,EAAQoB,EAAI,GACZpB,EAAQsB,EAAI,IACZ,ICtC2BC,EAAKnE,EAC1Be,EACAmC,IDoCWN,ECtCUuB,ECAF,ODAOnE,ECAC,WAC/B,OAAO,SAAc3D,GACnB,OAAOqD,ECHF9C,OAAOK,EDGUZ,ODDpB0E,GAAMnB,EAAKhD,YAAcuH,IAAQvH,OAAOuH,IACxCjB,MACAiB,GAAOnE,EAAKe,GAChB6B,EAAQA,EAAQ9B,EAAI8B,EAAQQ,EAAIgB,EAAM,WAAcrD,EAAG,KAAQ,SAAUmC,GGP1DzC,EAA+B7D,OAAOuC,KAAvD,MCGiB,SAAgBkF,GAC/B,IAAIC,EAAMpC,OAAOjF,EAAQmF,OACrBmC,EAAM,GACNC,EAAIjH,EAAU8G,GAClB,GAAIG,EAAI,GAAKA,GAAKC,EAAAA,EAAU,MAAMC,WAAW,2BAC7C,KAAMF,EAAI,GAAIA,KAAO,KAAOF,GAAOA,GAAc,EAAJE,IAAOD,GAAOD,GAC3D,OAAOC,GCRT3B,EAAQA,EAAQjC,EAAG,UAEjBgE,OAAQzE,ICHOO,EAA+ByB,OAAOyC,OAAvD,MCIiB,SAAUtC,EAAMuC,EAAWC,EAAYC,GACtD,IAAIhE,EAAIoB,OAAOjF,EAAQoF,IACnB0C,EAAejE,EAAElC,OACjBoG,OAAyB1I,IAAfuI,EAA2B,IAAM3C,OAAO2C,GAClDI,EAAejG,EAAS4F,GAC5B,GAAIK,GAAgBF,GAA2B,IAAXC,EAAe,OAAOlE,EAC1D,IAAIoE,EAAUD,EAAeF,EACzBI,EAAeR,EAAOjI,KAAKsI,EAAS7H,KAAKD,KAAKgI,EAAUF,EAAQpG,SAEpE,OADIuG,EAAavG,OAASsG,IAASC,EAAeA,EAAarI,MAAM,EAAGoI,IACjEJ,EAAOK,EAAerE,EAAIA,EAAIqE,GCbnCC,EAAY1H,EAAO0H,YAENA,GAAaA,EAAUC,WAAa,GCIrDzC,EAAQA,EAAQjC,EAAIiC,EAAQQ,EAAI,oCAAoCkC,KAAKD,GAAY,UACnFE,SAAU,SAAkBX,GAC1B,OAAOY,EAAKpD,KAAMwC,EAAWlC,UAAU9D,OAAS,EAAI8D,UAAU,QAAKpG,GAAW,MCRjEmE,EAA+ByB,OAAOqD,SCMvD3C,EAAQA,EAAQjC,EAAIiC,EAAQQ,EAAI,oCAAoCkC,KAAKD,GAAY,UACnFI,OAAQ,SAAgBb,GACtB,OAAOY,EAAKpD,KAAMwC,EAAWlC,UAAU9D,OAAS,EAAI8D,UAAU,QAAKpG,GAAW,MCRjEmE,EAA+ByB,OAAOuD,OAAvD,yqECGA,SACSC,GAAUpB,SACK,iBAARA,GAAoBA,aAAepC,OAInD,SACSyD,GAASpB,EAAwBD,OAAasB,yDAAiB,UAC/DF,GAASnB,GACdA,EACAA,EACED,EACAsB,EASN,IACMC,SACE,QACC,QACA,GAUT,SACSC,GAAkBC,EAAaC,UAClCA,IAAcH,GAAUI,QAAQF,EAC7BA,EAIT,SACSG,GAAc5B,UACdA,EAAI6B,QAAQ,4BAA6B,QAiDlD,IACMC,GAA2B,oBAAXxI,QAA0BA,QAC5B,oBAAXF,QAA0BA,OAAOA,SAAWA,QAAUA,QAC7C,oBAATG,MAAwBA,KAAKA,OAASA,MAAQA,SC9FjDwI,yBAWFxH,EACAyH,EACAC,EACAC,sBAEK3H,MAAQA,OACRyH,UAAYA,OACZC,SAAWA,OACXC,aAAeA,EAGbpE,KAAKvD,MAAM/B,MAAM,EAAGsF,KAAKqE,kBAAoBrE,KAAKmE,SAASzJ,MAAM,EAAGsF,KAAKqE,mBAC5ErE,KAAKoE,aAAaE,+DASfvJ,KAAKG,IAAI8E,KAAKkE,UAAWlE,KAAKoE,aAAaE,oDAQ3CtE,KAAKkE,UAAYlE,KAAKqE,uDAQtBrE,KAAKvD,MAAM8H,OAAOvE,KAAKqE,eAAgBrE,KAAKwE,2DAS5CzJ,KAAKK,IAAK4E,KAAKoE,aAAaK,IAAMzE,KAAKqE,qBAEvCF,SAAS3H,OAASwD,KAAKvD,MAAMD,OAAQ,0CAQrCwD,KAAKmE,SAASI,OAAOvE,KAAKqE,eAAgBrE,KAAK0E,kDAQ/C1E,KAAKvD,MAAMkI,UAAU,EAAG3E,KAAKqE,oDAQ7BrE,KAAKvD,MAAMkI,UAAU3E,KAAKqE,eAAiBrE,KAAKwE,8DAQlDxE,KAAK0E,cAAgB1E,KAAKwE,cAAsBf,GAAUmB,KAGvD5E,KAAKoE,aAAaK,MAAQzE,KAAKkE,WAAalE,KAAKoE,aAAaE,QAAUtE,KAAKkE,UACnFT,GAAUoB,MACVpB,GAAUI,cC1FViB,yBASSC,gBAKG/E,eACF,aACA,QACH,GACN+E,gDAOMA,UACLA,EAAQC,cAAahF,KAAKgF,aAAeD,EAAQC,kBAChDC,UAAYF,EAAQE,cACpBC,OAASH,EAAQG,WACjBC,SAAWnF,KAAKmF,UAAYJ,EAAQI,SAClCnF,2CAKAA,KAAKkF,MAAQlF,KAAKiF,SAASzI,kDAKN,MAArBwD,KAAKoF,aACVpF,KAAKoF,aACLpF,KAAKiF,uBAGQD,QACVI,aAAeJ,WCvBlBK,yBAgBSC,kBACNC,OAAS,QACTC,cACAH,EAAOI,SACPH,SAEAI,eAAgB,mDAIRJ,QACRK,iBAAiB3F,KAAKwF,QAAQI,KAAK5F,KAAMsF,oCAOvCA,MACOtF,KAAMsF,uCAKdO,EAAI,IAAIR,EAAOrF,eACnBuF,OAASvF,KAAKvD,MAAM/B,QACfmL,iCAIDlF,UAECmF,GAAc9F,KAAMW,wCAKtB4E,OAAS,mCAaP9I,eACFsJ,aACAC,QAAQvJ,GAAQwJ,OAAO,SACvBC,mBACAC,WACEnG,KAAKvD,8CAiCGyH,EAAmBN,UAC3BM,6CAIKkC,yDAAgB,EAAGC,yDAAcrG,KAAKvD,MAAMD,cACjDwD,KAAKvD,MAAM/B,MAAM0L,EAASC,8CAIrBD,yDAAgB,EAAGC,yDAAcrG,KAAKvD,MAAMD,oBAE/CwD,KAAKsG,aAAaF,EAASC,0DAOzBE,UACJvG,KAAKgG,QAAQO,EAAOA,EAAK9J,MAAO,IAAK8J,MAAM,oCAI3CrE,OAAasE,4DACdC,EAAiBzG,KAAKvD,MAAMD,OAC9BkK,EAAoC1G,KAAK2G,QACzCxB,GAAW,IAETnF,KAAK4G,UAAU1E,EAAKsE,OAErB,IAAIK,EAAG,EAAGA,EAAG3E,EAAI1F,SAAUqK,EAAI,SAC7BtB,QAAUrD,EAAI2E,IACY,IAA3B7G,KAAK8G,WAAWN,UACbO,OAAOL,IACPF,EAAMP,OAAO,IAEL,UAKGjG,KAAK2G,eAGlB,IAAI7B,aACC9E,KAAKvD,MAAM/B,MAAM+L,uDAMfvE,EAAaqE,WAErBS,EAAmB,IAAIlC,GACzB4B,EAAkB1G,KAAK2G,QACvBM,SAEKJ,EAAG,EAAGA,EAAG3E,EAAI1F,SAAUqK,EAAI,KAC5BK,EAAKhF,EAAI2E,GAETM,EAAgBnH,KAAKgG,QAAQkB,GAAKjB,OAAO,SAC1BjG,KAAK2G,WACJQ,EAAchC,WAAanF,KAAKkG,YAAYK,GAAMpB,YACjB,IAAlCnF,KAAK8G,YAAYP,MAAM,IAAkB,MACvDQ,OAAOL,cAITK,OAAOE,KACMjH,KAAK2G,UACNS,UAAUD,YASZjC,OAASlF,KAAKkG,YAAYK,GAAMrB,MAE1C8B,uCAIDK,yDAAa,EAAGpF,yDAAcjC,KAAKvD,MAAMD,OAAO6K,cACjD9B,OAASvF,KAAKvD,MAAM/B,MAAM,EAAG2M,GAAQrH,KAAKvD,MAAM/B,MAAM2M,EAAOpF,GAC3D,IAAI6C,4CAIOnG,MACdqB,KAAKsH,cAAgBtH,KAAK0F,cAAe,OAAO/G,SAC/C2I,aAAc,MAEbC,EAAWvH,KAAKwH,cAEhBC,EAAM9I,gBAEP6I,cAAgBD,SAEdvH,KAAKsH,YACLG,oCAOEvF,OAAasE,mEACfxG,KAAK0H,QAAQxF,EAAKlC,KAAMwG,sCAOrBA,UACHxG,KAAK2H,SAAS3H,KAAKvD,MAAOuD,KAAMwG,2CAQlCoB,OAAO5H,KAAKvD,MAAOuD,qCAOlBsE,EAAeuD,EAAqB5C,EAAkB6C,OACtDC,EAAkBzD,EAAQuD,EAC1BtB,EAAoBvG,KAAKgI,aAAaD,GAExC1D,EAAyBrE,KAAKiI,gBAAgB3D,EAAOwD,UACpB,IAAIhD,UAChCT,EAAiBC,IACvB8C,UAAUpH,KAAKkI,OAAO7D,IACtB+C,UAAUpH,KAAKmI,eAAelD,EAAUsB,yCA5LpCvG,KAAKuF,qBAGH9I,QACJ2L,QAAQ3L,gDAcNuD,KAAKvD,oBAGKA,QACZsJ,aACAC,QAAQvJ,QACRyJ,mBACAC,wDAKEnG,KAAKsG,aAAa,EAAGtG,KAAKvD,MAAMD,QAAS6L,KAAK,kBAGpC5L,QACZsJ,aACAC,QAAQvJ,GAAQ4L,KAAK,SACrBnC,mBACAC,qDAKE,WChIX,SACSmC,GAAaC,MACR,MAARA,QACI,IAAIC,MAAM,0CAGdD,aAAgBE,OAAezE,GAAE0E,MAAMC,aACvCrF,GAASiF,GAAcvE,GAAE0E,MAAME,cAC/BL,aAAgBM,MAAQN,IAASM,KAAa7E,GAAE0E,MAAMI,WACtDP,aAAgBQ,QAA0B,iBAATR,GAAqBA,IAASQ,OAAe/E,GAAE0E,MAAMM,aACtFC,MAAMC,QAAQX,IAASA,IAASU,MAAcjF,GAAE0E,MAAMS,cAEtDZ,EAAKxI,qBAAqBiE,GAAE0E,MAAMrD,OAAekD,EAEjDA,aAAgB7M,SAAiBsI,GAAE0E,MAAMU,wBAErCC,KAAK,0BAA2Bd,GACjCvE,GAAE0E,MAAMrD,QAIjB,SACSiE,GAAYhE,OAEbiD,KADCzC,MAAkBR,IACPiD,YAEdA,aAAgBvE,GAAE0E,MAAMrD,OAAekD,EAGpC,IADaD,GAAYC,GACzB,CAAgBjD,MD0PlBG,kBACI,mBAAO7G,YACN,kBAAM,UACR,kBEpRJ2K,yBAmBQjE,gBACItF,KAAMsF,GAEhBtF,KAAKuI,YACFiB,QAAUF,GAAWhE,oDAMvBmE,UAAW,OACXC,YAAa,EACd1J,KAAKwJ,SAASxJ,KAAKwJ,QAAQzD,wCAcxBmB,WACFlH,KAAKwJ,SACHxJ,KAAKwJ,QAAQpB,QAAQlB,0CAXrBlH,KAAKS,OAAS8I,EAAkBI,MAAMC,oDAKtC5J,KAAKyJ,UAAYzJ,KAAK6J,qBASfpE,YACX,OACA,0nIACA,KAMP8D,GAAkBI,aACT,cACA,aC9CHG,yBAiBQC,SAAwBrJ,IAAAA,KAAMsJ,IAAAA,OAAQzB,IAAAA,KAAMZ,IAAAA,wBACjDoC,OAASA,OACTrJ,KAAOA,OACPsJ,OAASA,OACTzB,KAAOA,OACPZ,SAAWA,GAAa,kBAAM,iDAkBzBnB,UACHxG,KAAK2H,SAAS3H,KAAKvD,MAAOuD,KAAMwG,wCAdhCxG,KAAK+J,OAAOtN,MAAM/B,MACvBsF,KAAK+J,OAAOE,iBAAiBjK,KAAKgK,QAClChK,KAAK+J,OAAOE,iBAAiBjK,KAAKgK,OAAShK,KAAKuI,KAAK/L,sDAKhDwD,KAAK+J,OAAOzD,aACjBtG,KAAK+J,OAAOE,iBAAiBjK,KAAKgK,QAClChK,KAAK+J,OAAOE,iBAAiBjK,KAAKgK,OAAShK,KAAKuI,KAAK/L,kBAerD0N,0CASU7C,OAAM8C,OAAuBC,yDAAetK,OAAOqK,GAAI3N,sBAC9D6N,MAAQhD,OACRiD,IAAMH,OACNI,WAAaH,OACbzC,SAAW3H,KAAK2H,SAAS/B,KAAK5F,WAE9BwF,4DAmCA+E,WAAaxP,KAAKK,IAAI4E,KAAKuK,WAAYzK,OAAOE,KAAKmK,IAAI3N,aACvD+L,KAAO,IAAIhG,OAAOvC,KAAKuK,6CAGpBrI,OACJsI,EAAS,GACTC,EAAS,KAEgBvI,EAAIwI,MAAM,kCAA9BC,OAAaC,cAClBA,MACQ,IAAIrI,OAAOoI,EAAYnO,QAAUoO,IACjC,IAAIrI,OAAOoI,EAAYnO,QAAUoO,IAIvB,IADD1I,EAAI2I,OAAO,SACL3I,EAAI1F,QAAUwD,KAAK8K,eAErCN,EAAOnH,OAAOrD,KAAKuK,WAAY,OAC/BE,EAAOpH,OAAOrD,KAAKuK,WAAY,KAEjCvK,KAAKqH,MAAQ0B,OAAO0B,IAAW1B,OAAOyB,IAAWxK,KAAKmK,sCAnDtDnK,KAAKsK,kBAGNH,QACDG,IAAMH,OACN3E,8CAIExF,KAAKqK,oBAGJhD,QACHgD,MAAQhD,OACR7B,mDAIExF,KAAKuK,yBAGC/H,QACR+H,WAAa/H,OACbgD,oDAIExF,KAAKwC,UAAY1C,OAAOE,KAAKqH,MAAM7K,gBAqC9CsN,GAAaiB,MAAQb,GACrBJ,GAAakB,KATb,SACoBC,eAEV,IAAI1I,OAAO0I,EAAM,GAAGzO,iBAChB,SAACC,EAAeyO,EAAqB1E,UAAuByE,EAAME,KAAK,mBAAKtN,EAAEuN,QAAQF,EAAM1D,gBAAkB,WCnJtH6D,yBAGSC,kBACNA,OAASA,kDAIPtL,KAAKsL,OAAOC,IAAI,mBAAKnL,EAAE3D,QAAOoD,KAAK,wCAIpC2L,EAAaxL,KAAKsL,OAAO,UACxBE,GAAcA,EAAWC,uCAI1BC,EAAY1L,KAAKsL,OAAOtL,KAAKsL,OAAO9O,OAAS,UAC5CkP,GAAaA,EAAUD,cCA5B7C,gCAkBStD,+EACNqG,YAAc7F,MAAkByD,GAAkB9D,SAAUH,EAAKqG,6EAEjE/C,EAAcnD,SACdH,iBAtBmBD,8CA8BjBC,8DACFqG,YAAc7F,MAAkB9F,KAAK2L,YAAarG,EAAKqG,oGAC9CrG,QACTsG,iEAKCC,EAAO7L,KAAK2L,iBACbG,kBACAC,kBAEDC,EAAUhM,KAAKuI,QACdyD,GAAYH,OAEbI,GAAiB,EACjBC,GAAgB,EAChBC,GAAY,mBAGVC,EAAKC,OAAQ,KACTC,EAAIN,EAAQtR,MAAMwC,GAClBqP,EAAS/R,OAAOuC,KAAKqP,EAAKC,QAAQG,OAAO,mBAA8B,IAArBF,EAAElB,QAAQqB,OAE3DC,KAAK,SAACzO,EAAGkC,UAAMA,EAAE3D,OAASyB,EAAEzB,aAE7BiQ,EAAQF,EAAO,MACjBE,EAAO,KACHvB,EAAQkB,EAAKC,OAAOI,KACrBV,WAAW1O,KAAK,IAAIyM,WACjB2C,SACEL,EAAKN,UAAUtP,YACjB0O,EAAM3C,cACF2C,EAAMvD,cAERqE,EAAQjI,QAAQ0I,EAAOvB,EAAM3C,WAIvCoE,EAAOX,EAAQ9O,GACfuD,EAAOkM,KAAQd,EACjBtC,GAAkBI,MAAMC,MACxBL,GAAkBI,MAAMiD,MACpBC,EAAYpM,IAAS8I,GAAkBI,MAAMC,OAASqC,EACtDpC,EAAWpJ,IAAS8I,GAAkBI,MAAMC,OAASsC,KAEvDS,IAAS/D,EAAckE,oBACb,gBAID,MAATH,GAAyB,MAATA,YACAV,gBAIP,MAATU,GAAyB,MAATA,YACDT,gBAIfS,IAAS/D,EAAcmE,YAAa,QAE/Bf,IADL9O,IAES,gBACJqM,GAAkBI,MAAMiD,QAG5Bd,UAAUzO,KAAK,IAAIkM,0DAMhB9I,IAAS8I,GAAkBI,MAAMC,MACrCiC,EAAKc,GACJ,mBAASlQ,IAAUkQ,SAGZ,SA5Dd,IAAK,IAAIzP,EAAE,EAAGA,EAAE8O,EAAQxP,SAAUU,EAAG,UAA5BA,qHAmEI8P,gDACNhN,KAAK+L,WAAWkB,MAAM,mBAAKjJ,EAAE8C,sBAAckG,yHAA8BA,gDAO1EnH,EAAI,IAAI+C,EAAc5I,eAC1BuF,OAASvF,KAAKvD,QAEdqP,UAAUoB,QAAQ,SAACC,EAAGjQ,UAAM4I,GAAcqH,EAAGC,EAAKtB,UAAU5O,QAE5D6O,WAAWmB,QAAQ,SAACC,EAAGjQ,UAAM4I,GAAcqH,EAAGC,EAAKrB,WAAW7O,MACzD2I,6HAQFiG,UAAUoB,QAAQ,mBAAaC,EAAE1D,uDAYnB4D,UACZrN,KAAK8L,UACTpR,MAAM,EAAG2S,GACTb,OAAO,mBAAKW,EAAEG,iBACd9Q,gDAIa6Q,UACTA,EAAWrN,KAAKuN,oBAAoBF,4CAI3B1J,WACZ0J,EAAW1J,EACN6J,EAAG,EAAGA,EAAGxN,KAAK8L,UAAUtP,SAAUgR,EAAI,KACvCC,EAAMzN,KAAK8L,UAAU0B,MACvBA,GAAMH,EAAU,MAChBI,EAAIH,kBAAkBD,SAErBA,sCA6BI9G,OACLxB,EAAU,IAAID,UAChByB,KACMa,UAAUb,aAAgB8E,GAChCrL,KAAK0N,cAAcnH,EAAK+E,QAAS/E,MAAM,+FACrBA,IAEfxB,EAAQqC,UAAUpH,KAAK2N,sDAMvBzL,OAAasE,4DACdC,EAAiBzG,KAAKvD,MAAMD,OAC9BwI,EAAc,GACdG,GAAW,IAETnF,KAAK4G,UAAU1E,EAAKsE,OAErB,IAAIK,EAAG,EAAG2G,EAAGxN,KAAK4N,iBAAiB5N,KAAKvD,MAAMD,QAASqK,EAAK3E,EAAI1F,QAAS,KACtE0K,EAAKhF,EAAI2E,GACT4G,EAAMzN,KAAK8L,UAAU0B,MAGhB,MAAPC,EAAa,IACJ,UAKThE,UAAW,MAEXoE,SAAUC,SACVC,EAAQxK,GAAQkK,EAAIrF,QAAQlB,GAAKA,GAEjCuG,EAAIhN,OAAS8I,GAAkBI,MAAMC,OACnCmE,SACGxI,QAAUwI,EACV/N,KAAK8G,iBACA,QACHvB,OAASvF,KAAKvD,MAAM/B,MAAM,GAAI,SAI1BqT,KACFA,IAAUN,EAAI5D,SAEpBkE,KAOYA,GANVN,EAAI5D,UAAarD,EAAMP,OAAUjG,KAAKgO,YACpCzI,QAAUvF,KAAKiO,mBACV,GAEPH,IAASL,EAAIhE,UAAW,WAK1BlE,QAAUkI,EAAId,OACRoB,IAAUN,EAAIZ,WAAarG,EAAMP,OAASO,EAAM6B,OAAS7B,EAAMD,OACtEmD,WAAamE,IAAarH,EAAM6B,KAAO7B,EAAMP,OAC7CwH,EAAI/D,aAAY1E,GAAeyI,EAAId,OAGpCmB,KAAWN,GACZK,GAAYC,MAAWjH,SAGtB,IAAI/B,aACC9E,KAAKvD,MAAM/B,MAAM+L,oEAOhB6E,WACPvG,EAAU,IAAID,sBAD2BkI,uDAE1C,IAAInG,EAAG,EAAGA,EAAKyE,EAAO9O,SAAUqK,EAAI,OACjByE,EAAOzE,GAAtB4E,IAAAA,KAAMhP,IAAAA,MACPyR,EAAkB,MAARzC,GAAgBzL,KAAK8L,UAAUL,MAE3CyC,GAAWA,EAAQ/B,WAAWpH,EAAQqC,UAAUpH,KAAK2N,mBAAmBlC,IACxE1G,EAAQqC,UAAUpH,KAAKgG,oBAAQvJ,aAAUuQ,MAAO7H,SAAU,aAEzDJ,6CAMKqB,yDAAgB,EAAGC,yDAAcrG,KAAKvD,MAAMD,cACjD,IAAI6O,GAAkBrL,KAAKmO,oBAAoB/H,EAASC,+CAMnDD,yDAAgB,EAAGC,yDAAcrG,KAAKvD,MAAMD,OAAQgK,+DAC5DJ,IAAYC,EAAO,MAAO,WAExBnE,EAAMlC,KAAKvD,MACbwJ,EAAQ,GAENmI,EAAapO,KAAK4N,iBAAiBvH,GAEnCQ,EAAGT,EAASoH,EAAGxN,KAAK4N,iBAAiBxH,GACzCS,EAAGR,GAASQ,EAAG3E,EAAI1F,QAAUgR,EAAKY,IAChCZ,EACF,KACMtG,EAAKhF,EAAI2E,GACT4G,EAAMzN,KAAK8L,UAAU0B,OAEtBC,EAAK,MACNA,EAAIH,kBAEJG,EAAIY,UAAYZ,EAAIhE,UACtBjD,EAAM6B,MAAQoF,EAAIY,SAAWZ,EAAI/D,cAAYzD,GAASiB,KACtDL,UAEGZ,2DAIYG,yDAAgB,EAAGC,yDAAcrG,KAAKvD,MAAMD,UAC3D4J,IAAYC,EAAO,aAEjBiI,EAAetO,KAAK4N,iBAAiBxH,GACrCgI,EAAapO,KAAK4N,iBAAiBvH,GACnCkI,EAAiBvO,KAAK8L,UACzBP,IAAI,SAAC4B,EAAGjQ,UAAOiQ,EAAGjQ,KAClBxC,MAAM4T,EAAcF,GACpB5B,OAAO,8BAAWL,YAClBZ,IAAI,gCAEDiD,GACJF,aACGC,IACHH,WAGKI,EAAMjD,IAAI,SAACkD,EAAGvR,eACbqR,EAAenD,QAAQqD,IAAM,EACjCA,EACA,WAEKC,EAAKpI,aACVoI,EAAKzE,iBAAiBwE,GACtBC,EAAKzE,iBAAiBuE,IAAQtR,QAC9BsP,OAAO,gBAAEf,IAAAA,KAAMhP,IAAAA,aAAmB,MAARgP,GAAgBhP,+CAI5B2R,WACZ3H,EAAiBzG,KAAKvD,MAAMD,OAC5BmS,EAAcP,GAAcpO,KAAK8L,UAAUtP,OACxCgR,EAAGxN,KAAK4N,iBAAiB5N,KAAKvD,MAAMD,QAASgR,EAAKmB,IAAenB,EAAI,KACtEC,EAAMzN,KAAK8L,UAAU0B,GACvBC,EAAIY,UAASZ,EAAIhE,UAAW,GAE3BzJ,KAAKgO,OAAQI,SACX7I,QAAWkI,EAAIY,SAAuB,MAAZZ,EAAId,KAEhCc,EAAI5D,SAEH,GADA7J,KAAKiO,gBAFPR,EAAId,aAMH,IAAI7H,aACC9E,KAAKvD,MAAM/B,MAAM+L,0CAOvBY,yDAAa,EAAGpF,yDAAcjC,KAAKvD,MAAMD,OAAO6K,EAChDiH,EAAetO,KAAK4N,iBAAiBvG,GACrC+G,EAAapO,KAAK4N,iBAAiBvG,EAAOpF,eAC3C6J,UACFpR,MAAM4T,EAAcF,GACpBlB,QAAQ,mBAAKC,EAAEpH,gGAEEsB,EAAMpF,2CAMXiC,OAAmBN,yDAAqBH,GAAUmB,KAC7DgK,EAAOhL,GAAaH,GAAUoB,MAE5BgK,EAAkB7O,KAAK4N,iBAAiB1J,GACxC4K,EAAa9O,KAAK8L,UAAU+C,GAC9BrB,EAAKqB,EAELE,SACAC,SACAC,SACAC,YAGAtL,IAAcH,GAAUoB,QACzBiK,GAAcA,EAAWT,aAEV5K,GAAUmB,MAAQV,IAAclE,KAAKvD,MAAMD,YACzCqS,EACdC,IAAeA,EAAWrF,WAAUuF,EAAwBH,IAGpC,MAAzBG,GAAiCpL,GAAaH,GAAUI,MAA4B,MAAnBkL,MAGlEG,EAASxL,GAAiB8J,EAAIoB,GAC9B,GAAKM,GAAUA,EAASlP,KAAK8L,UAAUtP,OACvCgR,GAAMoB,EAAMM,GAAUN,EACtB,KACMO,EAAUnP,KAAK8L,UAAUoD,MACR,MAAnBH,GAA2BI,EAAQd,YACnBb,EACd5J,IAAcH,GAAUmB,MAAM,SAEL,MAA3BqK,GAAmCE,EAAQ1F,WAAa0F,EAAQ7B,iBAAgB2B,EAA0BzB,GAC1G2B,EAAQd,UAAYc,EAAQ1F,SAAU,GAChB+D,YAO1B5J,IAAcH,GAAUI,MAAe,IAAP2J,IAAYxN,KAAKgO,MAAShO,KAAKsG,gBAC/DwI,GAAeA,EAAWT,UAAUU,EAAkB,GAEtDnL,IAAcH,GAAUI,MAA2B,MAAnBkL,EAAyB,KAGvD5J,GAAW,MAIb+J,EAASxL,GAAiB8J,KALpBoB,GAMN,GAAKM,GAAUA,EAASlP,KAAK8L,UAAUtP,OACvCgR,GAAMoB,EAAMM,GAAUN,EACtB,KACMO,EAAUnP,KAAK8L,UAAUoD,MAC3BC,EAAQd,YACQb,EACd2B,EAAQ1F,WAAa0F,EAAQ7B,gBAAgB,SAK/CE,IAAOqB,IAAiB1J,GAAW,GAGnCA,GAA+B,MAAnB4J,EAAyB,SAIhC5J,GAAY+J,GAAUlP,KAAK8L,UAAUtP,SACb,MAAnBuS,IAAyBvB,EAAKuB,QACZ,MAAzBC,MAEuB,MAA3BC,EACHA,EACAF,UAGG/O,KAAKiK,iBAAiBuD,iCAIxB9M,UACEV,KAAKoP,aAAa1O,GAAM,wCAInBA,UACLV,KAAK+L,WAAWS,OAAO,mBAAKxI,EAAEtD,OAASA,yDA7UtCV,KAAK8L,UAAUX,KAAK,SAACgC,EAAGjQ,UAC9BiQ,EAAEkB,UAAYlB,EAAEtD,WAAasD,EAAE1D,WAAa4F,EAAK/I,aAAapJ,EAAGA,EAAE,oDA+B/DgF,EAAMlC,KAAKvD,MACb8K,EAAW,GAENV,EAAG,EAAG2G,EAAG,EAAG3G,EAAG3E,EAAI1F,QAAUgR,EAAGxN,KAAK8L,UAAUtP,SAAUgR,EAAI,KAC9DtG,EAAKhF,EAAI2E,GACT4G,EAAMzN,KAAK8L,UAAU0B,GAEvBC,EAAIH,iBACJG,EAAIZ,YAAcY,EAAIhE,WAAUlC,GAAYL,KAC9CL,UAGGU,gBAGUC,gFACKA,oBAgSZ/B,gBACN,kBACW,KAEnBmD,GAAckE,UAAY,IAC1BlE,GAAcmE,YAAc,KAC5BnE,GAAc0G,WAAa/F,GAC3BX,GAAc2G,MAAQzF,OC9fhBhB,0BAkBSxD,oFAENwD,EAAWrD,SACXH,iBArBgBsD,wCA4BdtD,GACHA,EAAKiD,OAASM,aAAavD,EAAKiD,KAChCjD,EAAK0G,YACFzD,KAAOjD,EAAK0G,eACV1G,EAAK0G,aAGRK,EAAS/G,EAAK+G,SACfA,OAASvG,MAAkBgD,EAAW0G,sBAEvClK,EAAKpK,MAAKoK,EAAK+G,OAAOoD,EAAEpI,KAAO/B,EAAKpK,IAAIwU,eACxCpK,EAAKlK,MAAKkK,EAAK+G,OAAOoD,EAAEtF,GAAK7E,EAAKlK,IAAIsU,kBAC5BpK,EAAK+G,OAAQA,0FAEb/G,qEAMD0H,6CACP2C,oHAA4B3C,KAC5B4C,EAAO5P,KAAK4P,YAEXD,KACH3P,KAAK6P,YACL7P,KAAK8P,YAAY9P,KAAKvD,QAAUmT,IACnB,MAAZ5P,KAAK9E,KAAe8E,KAAK9E,KAAO0U,KACpB,MAAZ5P,KAAK5E,KAAewU,GAAQ5P,KAAK5E,0CAI3B8G,UACJlC,KAAK+P,OAAO/P,KAAKgQ,MAAM9N,MAAUA,sCAKjClC,KAAK6P,WACV7P,KAAKgQ,MAAMhQ,KAAKvD,OAChB,mBAGMmT,QACHnT,MAAQuD,KAAK+P,OAAOH,eAGlBnK,kBACA,qBACD,mBACM3F,OAAO8P,EAAKK,WAAW9M,SAAS,EAAG,KACjCrD,OAAO8P,EAAKM,WAAa,GAAG/M,SAAS,EAAG,KACzCyM,EAAKF,eAEQ7P,KAAK,YAE1B,kBACsBqC,EAAIvH,MAAM,eAA9BwV,OAAKC,OAAOC,cACZ,IAAIxH,KAAKwH,EAAMD,EAAQ,EAAGD,KAGrCrH,GAAW0G,mBAAqB,oBAEzB,IAAI1F,GAAaiB,OAAO,EAAG,OAC3B,IAAIjB,GAAaiB,OAAO,EAAG,OAC3B,IAAIjB,GAAaiB,OAAO,KAAM,aC3E/BuF,yBA8BSjU,EAAeiJ,kBACrBjJ,GAAKA,OACL0N,OAAST,GAAWhE,QAEpBiL,mBACAhL,OAAS,QACTiL,eAAiB,QAEjBC,eAAiBzQ,KAAKyQ,eAAe7K,KAAK5F,WAC1C0Q,SAAW1Q,KAAK0Q,SAAS9K,KAAK5F,WAC9B2Q,UAAY3Q,KAAK2Q,UAAU/K,KAAK5F,WAChC4Q,QAAU5Q,KAAK4Q,QAAQhL,KAAK5F,WAC5B6Q,YAAc7Q,KAAK6Q,YAAYjL,KAAK5F,WACpC8Q,oBAAsB9Q,KAAK8Q,oBAAoBlL,KAAK5F,WAEpD+Q,mBAGAC,mBACAL,kEA+CAtU,GAAG4U,iBAAiB,UAAWjR,KAAKyQ,qBACpCpU,GAAG4U,iBAAiB,QAASjR,KAAK0Q,eAClCrU,GAAG4U,iBAAiB,OAAQjR,KAAK4Q,cACjCvU,GAAG4U,iBAAiB,QAASjR,KAAK8Q,0BAClCzU,GAAG4U,iBAAiB,SAAUjR,KAAK2Q,wDAQnCtU,GAAG6U,oBAAoB,UAAWlR,KAAKyQ,qBACvCpU,GAAG6U,oBAAoB,QAASlR,KAAK0Q,eACrCrU,GAAG6U,oBAAoB,OAAQlR,KAAK4Q,cACpCvU,GAAG6U,oBAAoB,QAASlR,KAAK8Q,0BACrCzU,GAAG6U,oBAAoB,SAAUlR,KAAK2Q,8CAOjCQ,IACQnR,KAAKuQ,WAAWY,QACxBjE,QAAQ,mBAAKkE,+CAiCnBpR,KAAKvD,QAAUuD,KAAK3D,GAAGI,eACjB4M,KAAK,0DAEVgI,kBACIrR,KAAKsR,mBACPtR,KAAKkE,sDAMP6F,OAAOtN,MAAQuD,KAAK3D,GAAGI,kDAKtB8U,EAAmBvR,KAAK+J,OAAOvC,cAC/BgK,EAAWxR,KAAK+J,OAAOtN,MACvBgV,EAAazR,KAAKwH,gBAAkB+J,GACxCvR,KAAKvD,QAAU+U,OAEZhB,eAAiBe,OACjBhM,OAASiM,EAEVxR,KAAK3D,GAAGI,QAAU+U,IAAUxR,KAAK3D,GAAGI,MAAQ+U,GAC5CC,GAAWzR,KAAK0R,0DAIPpM,MACNQ,MAAkBR,IAChBiD,OAASM,MAAQ7I,KAAK+J,kBAAkBjB,WAAmBxD,EAAKiD,KV7J7E,SACSoJ,EAAgBxR,EAAQlC,MAC3BA,IAAMkC,EAAG,OAAO,MAIhBjD,EAFA0U,EAAO3I,MAAMC,QAAQjL,GACrB4T,EAAO5I,MAAMC,QAAQ/I,MAGrByR,GAAQC,EAAM,IACZ5T,EAAEzB,QAAU2D,EAAE3D,OAAQ,OAAO,MAC5BU,EAAI,EAAGA,EAAIe,EAAEzB,OAAQU,QACnByU,EAAe1T,EAAEf,GAAIiD,EAAEjD,IAAK,OAAO,EAC1C,OAAO,KAGL0U,GAAQC,EAAM,OAAO,KAErB5T,GAAKkC,GAAkB,qBAANlC,gBAAAA,KAA+B,qBAANkC,gBAAAA,IAAgB,KACxDpD,EAAOvC,OAAOuC,KAAKkB,GAGnB6T,EAAQ7T,aAAa4K,KACrBkJ,EAAQ5R,aAAa0I,QACrBiJ,GAASC,EAAO,OAAO9T,EAAE+T,WAAa7R,EAAE6R,aACxCF,GAASC,EAAO,OAAO,MAEvBE,EAAUhU,aAAawK,OACvByJ,EAAU/R,aAAasI,UACvBwJ,GAAWC,EAAS,OAAOjU,EAAE1D,YAAc4F,EAAE5F,cAC7C0X,GAAWC,EAAS,OAAO,MAE1BhV,EAAI,EAAGA,EAAIH,EAAKP,OAAQU,QACtB1C,OAAOuF,UAAU3F,eAAeE,KAAK6F,EAAGpD,EAAKG,IAAK,OAAO,EAEhE,IAAKA,EAAI,EAAGA,EAAIH,EAAKP,OAAQU,QACvByU,EAAe1T,EAAElB,EAAKG,IAAKiD,EAAEpD,EAAKG,KAAM,OAAO,EAErD,OAAO,SAGF,EUwHDyU,CAAe3R,KAAK+J,OAAQzE,UAE3ByE,OAAOoI,cAAc7M,QACrB8M,sDAIOlO,GACK,MAAbA,SACCA,UAAYA,OAGZmO,mBAAmBnO,+CAONA,mBACboO,0BACAC,mBAAqBrO,OACrBsO,gBAAkBC,WAAW,WAC3BC,EAAKrW,OACL6H,UAAYwO,EAAKH,qBACjBD,uBACJ,qDAQEK,WAAW,UACZ3S,KAAK+J,OAAO8F,YAAY7P,KAAK2S,WAAW,yDAQxC3S,KAAKwS,+BACMxS,KAAKwS,wBACXxS,KAAKwS,4DAMTtO,UAAYlE,KAAK+J,OAAO9B,gBAAgBjI,KAAKkE,UAAWT,GAAUI,oDAKnE7D,KAAKsR,iBAAmBtR,KAAKkE,gBAC5B2M,yCAIHM,EAAYyB,UACT5S,KAAKuQ,WAAWY,KAAKnR,KAAKuQ,WAAWY,YACrCZ,WAAWY,GAAI9T,KAAKuV,GAClB5S,iCAIJmR,EAAYyB,MACV5S,KAAKuQ,WAAWY,OAChByB,OAICC,EAAS7S,KAAKuQ,WAAWY,GAAI/F,QAAQwH,UACvCC,GAAU,GAAG7S,KAAKuQ,WAAWY,GAAI2B,OAAOD,EAAQ,GAC7C7S,YALEA,KAAKuQ,WAAWY,4CAUpBmB,yBAECvN,EAAU,IAAId,QAEb5H,GAAGI,MAAOuD,KAAKkE,eAEfzH,MAAOuD,KAAKqR,YAEbrH,EAAShK,KAAK+J,OAAO+I,OACzB/N,EAAQV,eACRU,EAAQgO,QAAQvW,OAChBuI,EAAQE,SACRF,EAAQ+C,iBAAiBkC,OAErB9F,EAAYlE,KAAK+J,OAAO9B,gBAAgBlD,EAAQV,eAAiB2F,EAAQjF,EAAQ+C,sBAElFsK,qBACAY,aAAa9O,uCAKdlE,KAAKvD,QAAUuD,KAAK3D,GAAGI,YACpBuU,mBAEFjH,OAAO5D,gBACPiM,gDAIEjB,KACJ8B,mBACAC,yDAKEC,qBAEA5C,WAAW/T,OAAS,SAClBwD,KAAK3D,uCA/PL2D,KAAK+J,OAAOxB,mBAEXA,MACI,MAARA,GAAgBA,IAASvI,KAAK+J,OAAOxB,QAErCvI,KAAK+J,OAAOqJ,cAAgB9K,GAAYC,QAKtCwB,EAAST,IAAYf,WACpBf,cAAgBxH,KAAK+J,OAAOvC,mBAC9BuC,OAASA,YANPA,OAAOxB,KAAOA,uCAWdvI,KAAKuF,qBAGHrD,QACJ6H,OAAOtN,MAAQyF,OACfkQ,qBACAvB,2DAKE7Q,KAAKwQ,6BAGKtO,QACZ6H,OAAOvC,cAAgBtF,OACvBkQ,qBACAvB,4DAyCE7Q,KAAKwS,gBACVxS,KAAKuS,mBAELvS,KAAK3D,GAAGiV,wDAKHtR,KAAKwS,gBACVxS,KAAKuS,mBAELvS,KAAK3D,GAAGgX,2BAEG1P,GACT3D,KAAK3D,KAAO6B,SAASoV,qBAEpBjX,GAAGkX,kBAAkB5P,EAAKA,QAC1B8M,2BC5IHzH,0BA0BS1D,oFAEN0D,EAAavD,SACbH,iBA7BkBD,wCAoChBC,0FACOA,QACTkO,8DAQDC,EAAW,GACXC,EAAM,GACN1T,KAAK2T,kBACK,2CACL,eAEK,sBAEP,WAEHlP,GAAOzE,KAAK4T,MACd,IAAM5T,KAAK6T,MAAQ,SAAW7T,KAAK4T,MAAQ,MAC3C,IAAM,SAEHE,mBAAqB,IAAIrL,OAhBhB,IAgB+BgL,EAAWhP,QACnDsP,cAAgB,IAAItL,OAjBX,IAiB0BiL,EAAMjP,QACzCuP,kBAAoB,IAAIvL,OAAO,IAClCzI,KAAKiU,WAAW1I,IAAIzH,IAAcjE,KAAK,IACzC,IAAK,UACAqU,0BAA4B,IAAIzL,OAAO3E,GAAa9D,KAAKmU,oBAAqB,gDAMvE/N,yDAAgB,EAAGC,yDAAcrG,KAAKvD,MAAMD,OAClD+J,8FAA0BH,EAASC,gBAGpCE,SACIvG,KAAKoU,2BAA2B7N,EAAK9J,4DAKpBA,UACnBA,EAAMsH,QAAQ/D,KAAKkU,0BAA2B,uDAI3BzX,OAEpB4X,EAAQ5X,EAAM9B,MAAMqF,KAAK6T,gBACzB,GAAKQ,EAAM,GAAGtQ,QAAQ,wBAAyB/D,KAAKmU,oBACnDE,EAAMxU,KAAKG,KAAK6T,yCAMd3R,gCAAgB8K,+JACFhN,KAAKoU,2BAA2BlS,EAAI6B,QAAQ/D,KAAKgU,kBAAmBhU,KAAK6T,mBAAY7G,oDAOxGsH,EAAgBtU,KAAKvD,WACpB8I,OAASvF,KAAKoU,2BAA2BpU,KAAKvD,eAC/C4H,EAAiBrE,KAAKvD,MAAMD,0BAHfwQ,6CAKX7F,wHAAwC6F,UACzCzH,OAASvF,KAAKuU,2BAA2BvU,KAAKvD,eAG/C+X,EAAgBnQ,EAAiB8C,EAAclC,SAASzI,OACnDmH,EAAM,EAAGA,GAAO6Q,IAAiB7Q,EACpC3D,KAAKvD,MAAMkH,KAAS3D,KAAKmU,sBACvBxQ,EAAMU,OAGCA,GAAkBiQ,EAAc3Q,KAAS3D,KAAKmU,uBACrD9P,EAEAV,EAAM6Q,KAAiBA,YAKjBxP,YAAcmC,EAAclC,WAC5BA,SAAWjF,KAAKvD,MAAM/B,MAAM2J,EAAgBmQ,KAC5CtP,OAASb,EAAiBiQ,EAAc9X,OAE/C2K,0CAMQjD,EAAmBN,OAC7BA,EAAW,OAAOM,MAEjBuQ,EAAU/Q,GAAiBQ,EAAWN,UACxC5D,KAAKvD,MAAMgY,KAAazU,KAAKmU,qBAAoBjQ,GAAaN,GAC3DM,qCAMGsC,OAINmJ,GAHWnJ,EAAMP,MAAQjG,KAAK8T,mBAAqB9T,KAAK+T,eAGzC7Q,KAAKlD,KAAKoU,2BAA2BpU,KAAKvD,WAEzDkT,EAAO,KAEH+E,EAAS1U,KAAK0U,SACZ/E,IAAU1U,MAAMyZ,KAET,WAAPxZ,KAAe8E,KAAK9E,KAAO,GAAK8E,KAAK9E,KAAO8E,KAAK0U,UAE1C,WAAPtZ,KAAe4E,KAAK5E,KAAO,GAAK4E,KAAK0U,QAAU1U,KAAK5E,YAGvDuU,6FAA0BnJ,0CAO3BkO,EAAS1U,KAAK0U,OAChBC,EAAWD,EAGC,MAAZ1U,KAAK9E,MAAayZ,EAAW5Z,KAAKK,IAAIuZ,EAAU3U,KAAK9E,MACzC,MAAZ8E,KAAK5E,MAAauZ,EAAW5Z,KAAKG,IAAIyZ,EAAU3U,KAAK5E,MAErDuZ,IAAaD,IAAQ1U,KAAKwH,cAAgB1H,OAAO6U,QAEjDC,EAAY5U,KAAKvD,MAEjBuD,KAAK6U,iBAAgBD,EAAY5U,KAAK8U,gBAAgBF,IACtD5U,KAAK+U,qBAAoBH,EAAY5U,KAAKgV,oBAAoBJ,SAE7DrP,OAASqP,mIAKCnY,OACT4X,EAAQrU,KAAKoU,2BAA2B3X,GAAO9B,MAAMqF,KAAK6T,gBAG1D,GAAKQ,EAAM,GAAGtQ,QAAQ,kBAAmB,SAAC2G,EAAOuK,EAAMC,EAAOtK,UAAQqK,EAAOrK,IAE/EnO,EAAMD,SAAW,MAAM0G,KAAKmR,EAAM,MAAKA,EAAM,GAAKA,EAAM,GAAK,KAE7DA,EAAM7X,OAAS,MACX,GAAK6X,EAAM,GAAGtQ,QAAQ,MAAO,IAC9BsQ,EAAM,GAAG7X,SAAQ6X,EAAM7X,OAAS,IAGhCwD,KAAKuU,2BAA2BF,EAAMxU,KAAKG,KAAK6T,oDAIpCpX,OACdA,EAAO,OAAOA,MAEb4X,EAAQ5X,EAAM9B,MAAMqF,KAAK6T,cAC3BQ,EAAM7X,OAAS,GAAG6X,EAAMhX,KAAK,MAC3B,GAAKgX,EAAM,GAAGhR,OAAOrD,KAAK4T,MAAO,KAChCS,EAAMxU,KAAKG,KAAK6T,oDAOhB7T,KAAKoU,2BACVpU,KAAK8U,gBACH9U,KAAKvD,QACNsH,QAAQ/D,KAAK6T,MAAO,mBAGNrM,gFACKA,EAAczD,QAAQ,IAAK/D,KAAK6T,mDAK/C9K,OAAO/I,KAAKwH,6BAGTkN,QACLlN,cAAgB1H,OAAO4U,gDAQrB1U,KAAKmV,QACG,MAAZnV,KAAK9E,KAAe8E,KAAK9E,IAAM,GACnB,MAAZ8E,KAAK5E,KAAe4E,KAAK5E,IAAM,cAGzBqK,gBACJ,uBACa,eACP,WACN,UACC,kBACQ,sBACI,OCxRhBkD,gIAAqBtD,wCAKhBC,KACFqC,SAAW,SAAClL,UAAUA,EAAMoO,OAAOvF,EAAKiD,OAAS,0FACxCjD,YCPZ8D,gIAAuB/D,wCAKlBC,KACFqC,SAAWrC,EAAKiD,4FACPjD,YCHZ6D,0BAWS7D,mFAEN6D,EAAc1D,SACdH,cAGA8P,YAAc,mBAjBK/P,wCAuBjBC,0FACOA,QAET+P,cAAgBpM,MAAMC,QAAQ5D,EAAKiD,MACtCjD,EAAKiD,KAAKgD,IAAI,mBAAKjC,GAAWzD,wCAOzB3D,8BAAgB8K,qDACjBhN,KAAK4G,sBAAU1E,aAAQ8K,WAEvBjI,EAAU/E,KAAKsV,2BAAepT,aAAQ8K,KAExChN,KAAKoV,eACChO,kBAAegO,aAAYpP,iBAAQ9D,aAAQ8K,aAG9CjI,mDAGOwQ,yDAAiB,GACzB9O,EAAiBzG,KAAKvD,MAAMD,OAC5BgZ,EAAaxV,KAAKyV,cAClBC,EAAU1V,KAAKoV,YACfrQ,EAAU,IAAID,sBAJkBkI,+DAOjCoI,YAAcpV,KAAK2V,uBAAWJ,aAAavI,KAG5ChN,KAAKoV,aAAepV,KAAKoV,cAAgBM,SAEtCN,YAAYrP,aAEZqP,YAAYpP,QAAQwP,GAAanN,KAAK,MACnCnD,MAAQlF,KAAKvD,MAAMD,OAASiK,GAG/B1B,qCAMEwQ,OAAkB/O,mEACpBxG,KAAK4V,SAASL,EAAUvV,KAAMwG,uCAO/BX,EAAI,IAAIsD,EAAcnJ,QAC1BuF,OAASvF,KAAKvD,UAGVoZ,EAAmB7V,KAAKqV,cAAcjK,QAAQpL,KAAKoV,oBACrDpV,KAAKoV,gBACLA,YAAcS,GAAoB,EAClChQ,EAAEwP,cAAcQ,GAAkB9O,OAAO/G,KAAKoV,aAC9CpV,KAAKoV,YAAYzO,SAGdd,kCAOH7F,KAAKoV,aAAapV,KAAKoV,YAAYrP,aAClCsP,cAAcnI,QAAQ,mBAAM4I,EAAG/P,iDAoC9BhB,EAAyB,IAAID,GAC/B9E,KAAKoV,eACChO,kBAAegO,aAAYlN,2BAEhCd,UAAUpH,KAAKsV,yBAGbvQ,sDAOA/E,KAAKoV,oBACLA,aAAY9O,gCACjB,yEAMa0G,gDACRhN,KAAKoV,oBACLA,aAAYpN,wBAAgBgF,wHACXA,yCAMbzG,OACLxB,EAAU,IAAID,UAChByB,GAAMxB,EAAQqC,UAAUpH,KAAKsV,eAAe/O,EAAK9J,QAE9CsI,EAAQqC,UAAUpH,KAAKoV,YAC5BpV,KAAKoV,YAAYlP,YAAYK,8FACXA,uCAOhBvG,KAAKoV,aAAapV,KAAKoV,YAAYjP,6KAOtB6G,gDACVhN,KAAKoV,oBACLA,aAAYnN,2BAAmB+E,2HACXA,0CAnFpBhN,KAAKoV,YAAcpV,KAAKoV,YAAY3Y,MAAQ,iBAG1CA,wEACKA,qDAOPuD,KAAKoV,YAAcpV,KAAKoV,YAAY5N,cAAgB,iBAG1CA,gFACKA,mDAObxH,KAAKoV,aAAepV,KAAKoV,YAAYvF,oBCnHlD,SACSnH,GAAOrM,OAAIiJ,mEAEX,IAAIgL,GAAUjU,EAAIiJ,aDiLbG,mBACF,SAAC8P,EAAUxL,EAAQvD,MACtBuD,EAAOsL,cAAc7Y,YAEpBgZ,EAAazL,EAAO0L,cAGpBM,EAAShM,EAAOsL,cAAc9J,IAAI,SAACuK,EAAIvZ,OACrCsJ,EAAIiQ,EAAGnP,iBACX8O,cAAgBD,IAChBxP,QAAQuP,EAAU/O,IAEZ/J,MAAOoJ,EAAE4P,cAAcjZ,OAAQD,oBAIlCmQ,KAAK,SAACsJ,EAAIC,UAAOA,EAAGxZ,MAAQuZ,EAAGvZ,QAE/BsN,EAAOsL,cAAcU,EAAO,GAAGxZ,UC/L1CmM,GAAM4H,UAAYA,GAGlB5H,GAAMrD,OAASA,GAEfqD,GAAME,cAAgBA,GAEtBF,GAAMM,aAAeA,GAErBN,GAAMI,WAAaA,GAEnBJ,GAAMC,aAAeA,GAErBD,GAAMU,eAAiBA,GAEvBV,GAAMS,cAAgBA,GAEtBT,GAAMY,WAAaA,GAEnBtF,GAAE0E,MAAQA"}